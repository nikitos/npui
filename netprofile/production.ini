# NetProfile local configuration file
# Production template
#
# See Pyramid docs to learn about all the .ini sections and what are they for:
# http://docs.pylonsproject.org/docs/pyramid/en/latest/narr/project.html
#
# To learn all supported Pyramid options see this link:
# http://docs.pylonsproject.org/docs/pyramid/en/latest/narr/environment.html
#
# Note: The fact that some option is not present in this file does not imply
#       that it can't be used.
#
# Note: Some options mentioned here are only relevant when a particular
#       NetProfile module is installed and enabled.

# Section: WSGI pipeline for administrative UI
# ============================================
[pipeline:main]
pipeline =
	egg:repoze.tm2#tm
	netprofile

# Section: WSGI pipeline for customer UI
# ======================================
[pipeline:npclient]
pipeline =
	egg:repoze.tm2#tm
	app_npclient

# Section: WSGI pipeline for external operations gateway
# ======================================================
[pipeline:xop]
pipeline =
	egg:repoze.tm2#tm
	app_xop

# Section: Application settings for administrative UI
# ===================================================
[app:netprofile]

# Application entry point.
# Usually "egg:netprofile" for all standard services.
use = egg:netprofile

# Whether to check modification time of templates and
# reload them if they've been changed.
pyramid.reload_templates = false

# Show authorization debug log.
pyramid.debug_authorization = false

# Show not-found exception events.
pyramid.debug_notfound = false

# Show Pyramid route matching.
pyramid.debug_routematch = false

# Locale to use if client didn't ask for anything else.
pyramid.default_locale_name = en

# List of all available locales. Authors of new language translations should
# add to this list.
#
# Note: Do not mention encodings here; everything shold be in UTF-8.
pyramid.available_languages = en ru

# List of included Pyramid modules.
pyramid.includes =
	pyramid_mako
	pyramid_redis_sessions
	pyramid_mailer
	netprofile.common.hooks
	netprofile.common.modules
	netprofile.common.rpc
	netprofile.ext.direct
	netprofile.dav
	netprofile.celery
	netprofile.pdf
	netprofile_core.auth

# NetProfile-specific debug switch. Some of the things it influences:
#
# * Use of non-minified JS libraries.
# * Pretty-printing of XML and JSON responses.
# * FIXME: other things that I forgot about.
netprofile.debug = false

# Unique site instance ID.
#
# This shold be the same on all nodes if you use load-balancing.
netprofile.instance_id = ru.netprofile

# Whitespace-separated list of additinal enabled password storage mechanisms.
#
# You should crefully consider enabling or disabling specific mechanisms,
# as almost all of them are more susceptible to cracking, compared to scrypt,
# which is always used as the primary password storage mechanism.
#
# List of mechanisms:
# * "scrypt"     - used to authenticate to NetProfile.
# * "digest-ha1" - used for WebDAV and SIP authentication.
# * "ntlm"       - used for MS-CHAP authentication over RADIUS. Easily
#                  crackable.
# * "crypt"      - used for PAP authentication over RADIUS, and for storing in
#                  LDAP databases.
# * "plain"      - used for unsupported RADIUS auth methods. Do not enable.
netprofile.auth.enabled_for.users = digest-ha1 crypt
netprofile.auth.enabled_for.accounts = ntlm crypt

# Default password storage mechanisms.
netprofile.auth.default_hash.users = scrypt
netprofile.auth.default_hash.accounts = scrypt

# Digest realm to use in HTTP Digest auth. Also used to pre-bake HA1 hashes
# for users, to allow not to store plain-text passwords for HTTP Digest auth.
#
# Note: Never change this after deployment! Your existing users won't be able
#       to log in to any service that requires Digest auth (WebDAV etc.).
netprofile.auth.digest.realm = NetProfile UI

# Secret string used when generating HTTP Digest nonce.
netprofile.auth.digest.secret = npsecret

# Check timestamp portion of HTTP Digest nonce field.
netprofile.auth.digest.check_timestamp = true

# Allowed limits for HTTP Digest nonce timestamp, in seconds.
#
# Note: These limits define how often reauthentication is done for HTTP
#       Digest auth.
# Note: timestamp_max_ahead is used to account for server farms with
#       unsynchronized clocks. You can set this value to 0 if you only run
#       a single server host.
netprofile.auth.digest.timestamp_max_ahead = 5
netprofile.auth.digest.timestamp_max_behind = 120

# Configuration of scrypt KDF.
#
# Note: See RFC 7914 (https://tools.ietf.org/html/rfc7914) for description
#       of these parameters.
#netprofile.crypto.scrypt.salt_length = 20
#netprofile.crypto.scrypt.n_exponent = 14
#netprofile.crypto.scrypt.r_value = 8
#netprofile.crypto.scrypt.p_value = 1
#netprofile.crypto.scrypt.buffer_length = 64

# Configuration of method used for POSIX crypt(3) KDF.
#
# Currently supported values are: sha256, sha512.
# Default is sha512.
#netprofile.crypto.crypt.method = sha512

# URL path to use for ExtDirect API descriptor requests.
netprofile.ext.direct.api_path = direct/api

# URL path to use for ExtDirect requests.
netprofile.ext.direct.router_path = direct/router

# Client-side namespace name for ExtDirect API descriptors.
#
# Note: You probably don't want to change this.
netprofile.ext.direct.namespace = NetProfile.api

# Name of our ExtDirect API descriptor.
#
# Note: You probably don't want to change this.
netprofile.ext.direct.descriptor = NetProfile.api.Descriptor

# Show exception details in ExtDirect responses.
#
# Note: You must disable this in production, or risk exploitation.
netprofile.ext.direct.expose_exceptions = false

# Enable debugging in ExtDirect handling code.
#
# Note: You must disable this in production, or risk exploitation.
netprofile.ext.direct.debug_mode = false

# Hostname of realtime server, if you use one.
#
# Note: This uses SockJS for communication between client (browser) and
#       server.
netprofile.rt.host = localhost

# TCP port of realtime server, if you use one.
netprofile.rt.port = 8808

# URL of the realtime server, if it differs from host/port provided above.
#netprofile.rt.url = 'http://localhost:8808'

# Secure flag of realtime server connection.
netprofile.rt.secure = false

# Number of Tornado child processes to spawn for realtime server.
#
# Note: See http://tornado.readthedocs.org/en/latest/tcpserver.html#tornado.tcpserver.TCPServer.start
#       for all the special values this option can use.
netprofile.rt.processes = 0

# List of path prefixes to be ignored by Pyramid debug toolbar.
debugtoolbar.exclude_prefixes = /dav

# SQLAlchemy database URI.
#
# Currently supported DB driver strings:
# * mysql+pymysql (preferred one at the moment)
# * mysql+mysqldb (no py3k support yet)
# * mysql+mysqlconnector
# * mysql+oursql
#
# Note: You need to install your python DBAPI driver of choice separately.
#
# Note: See http://docs.sqlalchemy.org/en/rel_1_1/core/engines.html
#       and http://docs.sqlalchemy.org/en/rel_1_1/dialects/mysql.html
#
# Note: If you haven't configured MySQL's client and/or server character sets
#       in my.cnf file you might need to append the following to the end of
#       this URI, depending on your driver and Python version:
#
#         "?charset=utf8&use_unicode=0" - when running Python 2.x
#         "?charset=utf8"               - when running Python 3.x
sqlalchemy.url = driver://user:password@host/database

# Maximum connection age in seconds.
#
# Note: This is needed for MySQL and similar DBs to mitigate "server has gone
#       away" problems.
sqlalchemy.pool_recycle = 3600

# Outgoing mail configuration for pyramid_mailer.
#
# Note: Refer to http://docs.pylonsproject.org/projects/pyramid_mailer/en/latest/#configuration
#       for more settings.
mail.host = mail.example.com
mail.port = 25
mail.queue_path = %(here)s/data/maildir
#mail.username =
#mail.password =
#mail.tls = true

# HTTP Strict Transport Security (HSTS) configuration.
#
# Note: RFC 6797 describes what it is, and what all the fields mean. See here:
#       http://tools.ietf.org/html/rfc6797
netprofile.http.sts.enabled = false
netprofile.http.sts.max_age = 604800
netprofile.http.sts.include_subdomains = true
netprofile.http.sts.preload = false

# Cache backend to use for dogpile.cache.
# See http://dogpilecache.readthedocs.org/en/latest/api.html#backends
netprofile.cache.backend = dogpile.cache.redis

# Default expiration time (in seconds) for cache entries.
netprofile.cache.expiration_time = 7200

# Arguments for chosen cache backend.
#
# Note: These will be different for every backend.
netprofile.cache.arguments.host = localhost
netprofile.cache.arguments.port = 6379
netprofile.cache.arguments.db = 1
#netprofile.cache.arguments.password =
netprofile.cache.arguments.distributed_lock = false
netprofile.cache.arguments.redis_expiration_time = 9600

# Configuration of integrated remote procedure call APIs

# Enable XML-RPC protocol
# Default endpoint URL is "/api/xmlrpc".
netprofile.rpc.xmlrpc = true

# Enable JSON-RPC protocol
# Default endpoint URL is "/api/jsonrpc".
netprofile.rpc.jsonrpc = true

# Realm string used for HTTP basic auth when issuing RPC requests.
netprofile.auth.rpc_realm = NetProfile RPC

# LDAP connection details.
#
# Note: Define this only if you are using LDAP module.

# LDAP server URI.
#netprofile.ldap.connection.uri = ldap://example.com

# Alternatively, you can define server host/port.
#netprofile.ldap.connection.host = example.com
#netprofile.ldap.connection.port = 389

# LDAP protocol version (defaults to 3).
#netprofile.ldap.connection.protocol = 3

# Authentication type to use.
# Allowed values: anonymous / simple / sasl / ntlm
#netprofile.ldap.connection.auth.type = simple

# Credentials to use for authentication.
#netprofile.ldap.connection.auth.user = cn=admin,dc=example,dc=com
#netprofile.ldap.connection.auth.password = secret

# Automatic binding configuration.
# Allowed values: none / no-tls / tls-before-bind / tls-after-bind
#netprofile.ldap.connection.auth.bind = none

# Local SSL certificate and key to use, if any.
#netprofile.ldap.connection.ssl.cert.file = /path/to/my.crt
#netprofile.ldap.connection.ssl.key.file = /path/to/my.key
#netprofile.ldap.connection.ssl.key.password = secret

# Certificate authority configuration.
#
# Note: Any one of these options will suffice.
# Note: Anything but "file" here probably won't work on Python < 3.4.
#netprofile.ldap.connection.ssl.ca.file = /path/to/ca.crt
#netprofile.ldap.connection.ssl.ca.path = /path/to/ca/dir/
#netprofile.ldap.connection.ssl.ca.data = inline-ca-certificates-here

# Specify if remote certificate validation is required.
# Allowed values: none / optional / required
#netprofile.ldap.connection.ssl.validate = required

# Space-separated list of additional allowed server hostnames.
#netprofile.ldap.connection.ssl.altnames = example.net example.org

# LDAP ORM configuration.
#
# Note: Define this only if you are using LDAP module.
#netprofile.ldap.orm.default.base = dc=example,dc=com
#netprofile.ldap.orm.default.scope = one
#netprofile.ldap.orm.User.base = ou=users,dc=example,dc=com
#netprofile.ldap.orm.User.default_shell = /sbin/nologin
#netprofile.ldap.orm.Group.base = ou=groups,dc=example,dc=com
#netprofile.ldap.orm.Host.base = ou=hosts,dc=example,dc=com
#netprofile.ldap.orm.Entity.base = ou=entities,dc=example,dc=com

# Secret string used to sign outgoing session ID cookies.
redis.sessions.secret = npsecret

# Default timeout (in seconds) for user session data.
redis.sessions.timeout = 7200

# Cookie name to use for session IDs.
redis.sessions.cookie_name = npkey

# Whether to issue session ID cookies on server-side exception.
redis.sessions.cookie_on_exception = false

# Hostname of Redis server used for user session storage.
redis.sessions.host = localhost

# TCP port of Redis server used for user session storage.
redis.sessions.port = 6379

# Redis database number used for user session storage.
redis.sessions.db = 0

# Password to use when connecting to Redis session store.
#redis.sessions.password =

# Redis configuration for realtime server, if you use one.
#netprofile.rt.redis.host = localhost
#netprofile.rt.redis.port = 6379
#netprofile.rt.redis.db = 4
#netprofile.rt.redis.password =

# Default encoding of Mako templates.
mako.input_encoding = utf-8

# Directory for python modules auto-generated from templates.
mako.module_directory = %(here)s/data/tplc

# Celery request broker URI.
celery.broker_url = amqp://user:password@amqp.example.com:5672/

# Celery result delivery backend URI.
celery.result_backend = rpc://

# Timeout for queued Celery results.
celery.result_expires = 180

# Directory for font files used in document generation.
netprofile.fonts.directory = %(here)s/data/fonts

# Configuration of registered font families.
netprofile.fonts.default_family = tinos
netprofile.fonts.family.tinos.normal = Tinos-Regular.ttf
netprofile.fonts.family.tinos.bold = Tinos-Bold.ttf
netprofile.fonts.family.tinos.italic = Tinos-Italic.ttf
netprofile.fonts.family.tinos.bold_italic = Tinos-BoldItalic.ttf

# Configuration file generation and deployment settings.
netprofile.confgen.files_output_dir = %(here)s/data/confgen/files
netprofile.confgen.templates_output_dir = %(here)s/data/confgen/templates
netprofile.confgen.deployment_type = puppet
netprofile.confgen.puppet.files_dir = /etc/puppet/modules/npconfgen/files/generated
netprofile.confgen.puppet.templates_dir = /etc/puppet/modules/npconfgen/templates/generated

# ISO 4217:2008 alphabetic code for default currency.
#
# All money sums without an attached currency definition are assumed to be in
# this currency.
netprofile.currency.default = EUR

# Device management configuration options.

# Whitespace-separated list of extra paths to search for SNMP MIB files.
#netprofile.devices.mib_paths =

# Default type of host prober to use.
#
# Currently supported host prober types:
# * fping (plain old ICMP echo requests)
# * fping+arp (like "fping", but assisted by ARP table clear/get via SNMP)
#
# Note: All fping-based host prober types need an installed fping package on
#       the system that runs celery tasks. Moreover, the fping binary must be
#       setuid root.
netprofile.devices.host_probers.default = fping

# Full path to fping binary.
netprofile.devices.fping.path = /usr/sbin/fping

# Interval (in milliseconds) between sending ICMP packets.
netprofile.devices.fping.packet_interval = 12

# Interval (in milliseconds) between sending ICMP packets to specific host.
netprofile.devices.fping.per_target_packet_interval = 110

# Send ICMP echo request packets with this amount of data (in bytes).
netprofile.devices.fping.packet_size = 1400

# Number of ICMP packets to send to specific host.
netprofile.devices.fping.packet_count = 3

# Bind to this local source address before sending packets.
#netprofile.devices.fping.source_address =

# Bind to this local interface before sending packets.
#
# Note: This requires OS support for SO_BINDTODEVICE socket option.
#netprofile.devices.fping.source_interface =

# Same as above, except for fping6 binary (used for IPv6).
netprofile.devices.fping6.path = /usr/sbin/fping6
netprofile.devices.fping6.packet_interval = 12
netprofile.devices.fping6.per_target_packet_interval = 110
netprofile.devices.fping6.packet_size = 1400
netprofile.devices.fping6.packet_count = 3

# Section: Application settings for customer UI
# =============================================
#
# Note: See "app:netprofile" section above for descriptions of most settings.
[app:app_npclient]

use = egg:netprofile

# String representing NetProfile virtual host.
#
# This is used to differentiate between services within a single entry point.
netprofile.vhost = client

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.available_languages = en ru
pyramid.includes =
	pyramid_mako
	pyramid_redis_sessions
	pyramid_mailer
	netprofile.common.hooks
	netprofile.common.modules
	netprofile_access.auth

netprofile.debug = false

netprofile.instance_id = ru.netprofile

netprofile.auth.enabled_for.accounts = ntlm crypt
netprofile.auth.default_hash.accounts = scrypt

sqlalchemy.url = driver://user:password@host/database
sqlalchemy.pool_recycle = 3600

mail.host = mail.example.com
mail.port = 25
mail.queue_path = %(here)s/data/maildir
#mail.username =
#mail.password =
#mail.tls = true

netprofile.http.sts.enabled = false
netprofile.http.sts.max_age = 604800
netprofile.http.sts.include_subdomains = true
netprofile.http.sts.preload = false

# Public key for reCAPTCHA service.
#netprofile.client.recaptcha.public_key = YOUR-RECAPTCHA-PUBLIC-KEY

# Private key for reCAPTCHA service.
#netprofile.client.recaptcha.private_key = YOUR-RECAPTCHA-PRIVATE-KEY

# Enable customer self-registration.
netprofile.client.registration.enabled = false

# Require email verification for newly registered customers.
#
# Note: Requires working mailer configuration.
netprofile.client.registration.verify_email = true

# State ID to assign to entities created via registration process.
netprofile.client.registration.state_id = 1

# Default rate ID to assign to access entities created via registration
# process.
netprofile.client.registration.rate_id = 1

# Entity link type ID to use for storing randomly generated verification keys.
netprofile.client.registration.link_id = 1

# Length of randomly generated e-mail verification string.
netprofile.client.registration.code_length = 20

# Use mail queue for sending registration verification emails.
netprofile.client.registration.mail_queue = false

# "From:" field to use when sending registration-related emails.
netprofile.client.registration.mail_sender = noreply@example.com

# Minimum length of customer-supplied passwords.
netprofile.client.registration.min_password_length = 8

# Use reCAPTCHA for registration form.
#
# Note: See netprofile.client.recaptcha.* options above.
netprofile.client.registration.recaptcha.enabled = false

# Enable customer self-service password recovery.
netprofile.client.password_recovery.enabled = false

# Replace user's password with a random one on password recovery.
netprofile.client.password_recovery.change_password = true

# Length of new random replacement password.
netprofile.client.password_recovery.password_length = 12

# Use mail queue for sending password recovery emails.
netprofile.client.password_recovery.mail_queue = false

# "From:" field to use when sending password recovery emails.
netprofile.client.password_recovery.mail_sender = noreply@example.com

# Use reCAPTCHA for password recovery form.
#
# Note: See netprofile.client.recaptcha.* options above.
netprofile.client.password_recovery.recaptcha.enabled = false

# Origin ID of customers' newly created tickets.
netprofile.client.ticket.origin_id = 2

# Auto-assign new customer tickets to user and/or group.
#netprofile.client.ticket.assign_uid =
#netprofile.client.ticket.assign_gid =

netprofile.cache.backend = dogpile.cache.redis
netprofile.cache.expiration_time = 7200
netprofile.cache.arguments.host = localhost
netprofile.cache.arguments.port = 6379
netprofile.cache.arguments.db = 1
#netprofile.cache.arguments.password =
netprofile.cache.arguments.distributed_lock = false
netprofile.cache.arguments.redis_expiration_time = 9600

redis.sessions.secret = npsecret
redis.sessions.timeout = 7200
redis.sessions.cookie_name = npkey
redis.sessions.cookie_on_exception = true
redis.sessions.host = localhost
redis.sessions.port = 6379
redis.sessions.db = 2
#redis.sessions.password =

mako.input_encoding = utf-8
mako.module_directory = %(here)s/data/client_tplc

netprofile.currency.default = EUR

# Section: Application settings for external operations gateway
# =============================================================
#
# Note: See "app:netprofile" section above for descriptions of most settings.
[app:app_xop]

use = egg:netprofile
netprofile.vhost = xop

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.available_languages = en ru
pyramid.includes =
	pyramid_redis_sessions
	netprofile.common.hooks
	netprofile.common.modules
	netprofile_xop.auth

netprofile.debug = false

netprofile.instance_id = ru.netprofile

sqlalchemy.url = driver://user:password@host/database
sqlalchemy.pool_recycle = 3600

mail.host = mail.example.com
mail.port = 25
mail.queue_path = %(here)s/data/maildir
#mail.username =
#mail.password =
#mail.tls = true

netprofile.http.sts.enabled = false
netprofile.http.sts.max_age = 604800
netprofile.http.sts.include_subdomains = true
netprofile.http.sts.preload = false

netprofile.cache.backend = dogpile.cache.redis
netprofile.cache.expiration_time = 7200
netprofile.cache.arguments.host = localhost
netprofile.cache.arguments.port = 6379
netprofile.cache.arguments.db = 1
#netprofile.cache.arguments.password =
netprofile.cache.arguments.distributed_lock = false
netprofile.cache.arguments.redis_expiration_time = 9600

redis.sessions.secret = npsecret
redis.sessions.timeout = 7200
redis.sessions.cookie_name = npkey
redis.sessions.cookie_on_exception = true
redis.sessions.host = localhost
redis.sessions.port = 6379
redis.sessions.db = 4
#redis.sessions.password =

mako.input_encoding = utf-8
mako.module_directory = %(here)s/data/xop_tplc

netprofile.currency.default = EUR

# Section: Application settings for "qp" utility
# ==============================================
#
# Note: "qp" utility is used to periodically scoop outgoing mail from
#       a local queue and send it in batches.
#
#       It is part of repoze.sendmail package.
[app:qp]
hostname = mail.example.com
port = 25
#username =
#password =
force_tls = false
no_tls = false
ssl = false
queue_path = %(here)s/data/maildir
#debug_smtp =

# Section: Standalone server settings for administrative UI
# =========================================================
#
# Note: These settings are for standalone servers (i.e. launched from
#       "pserve"). They do not apply when using external WSGI servers.
[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

# Section: Standalone server settings for customer UI
# ===================================================
#
# Note: These settings are for standalone servers (i.e. launched from
#       "pserve"). They do not apply when using external WSGI servers.
[server:npclient]
use = egg:waitress#main
host = 0.0.0.0
port = 6544

# Section: Standalone server settings for external operations gateway
# ===================================================================
#
# Note: These settings are for standalone servers (i.e. launched from
#       "pserve"). They do not apply when using external WSGI servers.
[server:xop]
use = egg:waitress#main
host = 0.0.0.0
port = 6545

# Section: Alembic migrations configuration
#
# This is an optional configuration section for alembic. It is nearly
# equivalent to a standard [alembic] section in standalone alembic.ini file.
# For more information please consult Alembic docs located at:
# https://alembic.readthedocs.org/en/latest/tutorial.html#editing-the-ini-file
#
# Note: All settings in this section are completely optional. Reasonable
#       defaults will be automatically generated. Therefore this section
#       is provided mainly for development and debugging purposes.
[migrations]
# path to migration scripts
#script_location = netprofile:alembic

# template used to generate migration files
#file_template = %%(rev)s_%%(slug)s

# alternative database URL
#sqlalchemy.url = driver://user:password@host/database

# the output encoding used when revision files
# are written from script.py.mako
#output_encoding = utf-8

# Section: Logging configuration
# ==============================
#
# See http://docs.pylonsproject.org/docs/pyramid/en/latest/narr/logging.html
# and https://docs.python.org/3.4/library/logging.config.html
[loggers]
keys = root, netprofile, netprofile_dav, netprofile_core, sqlalchemy, tornado

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_netprofile]
level = WARN
handlers =
qualname = netprofile

[logger_tornado]
level = WARN
handlers =
qualname = tornado

[logger_netprofile_dav]
level = WARN
handlers =
qualname = netprofile_core.dav

[logger_netprofile_core]
level = WARN
handlers =
qualname = netprofile_core

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

