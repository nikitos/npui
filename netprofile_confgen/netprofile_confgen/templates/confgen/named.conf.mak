## -*- coding: utf-8 -*-
/*
 * NetProfile
 * Configuration: ${srv.type.description or srv.type.name}
 * Autogenerated on ${now.date()} at ${now.time()}
 * Do not modify - this file will be overwritten!
 */

acl selfacl {
	127/8;
	::1/128;
% for selfv4 in srv.host.real.ipv4_addresses:
	${selfv4}/32;
% endfor
% for selfv6 in srv.host.real.ipv6_addresses:
	${selfv6}/128;
% endfor
};

acl dnsacl {
	127/8;
	::1/128;
% for dnssrv in gen.dns_srvs:
% for selfv4 in dnssrv.host.real.ipv4_addresses:
	${selfv4}/32;
% endfor
% for selfv6 in dnssrv.host.real.ipv6_addresses:
	${selfv6}/128;
% endfor
% endfor
};

acl ownnets {
	127/8;
	::1/128;
% for net in gen.all_nets:
% if net.enabled:
% if net.ipv4_address:
	${net.ipv4_address}/${net.ipv4_cidr};
% endif
% if net.ipv6_address:
	${net.ipv6_address}/${net.ipv6_cidr};
% endif
% endif
% endfor
};

options {
	listen-on {
		127/8;
% for selfv4 in srv.host.real.ipv4_addresses:
		${selfv4};
% endfor
	};
	listen-on-v6 {
		::1/128;
% for selfv6 in srv.host.real.ipv6_addresses:
		${selfv6};
% endfor
	};

	directory "${dtpl.var('work_dir')}";
${dtpl.if_var('pid_file')}
	pid-file "${dtpl.var('pid_file')}";
${dtpl.endif}
${dtpl.if_var('sesskey_file')}
	session-keyfile "${dtpl.var('sesskey_file')}";
${dtpl.endif}
${dtpl.if_var('dump_file')}
	dump-file "${dtpl.var('dump_file')}";
${dtpl.endif}
% if gen.name == 'iscbind99':
${dtpl.if_var('keys_file')}
	bindkeys-file "${dtpl.var('keys_file')}";
${dtpl.endif}
% endif
${dtpl.if_var('managedkeys_dir')}
	managed-keys-directory "${dtpl.var('managedkeys_dir')}";
${dtpl.endif}

	allow-query { any; };
	allow-transfer { selfacl; };
	allow-update-forwarding { none; };
	match-mapped-addresses yes;

% if len(srv.host.real.ipv4_addresses) > 0:
	query-source address ${srv.host.real.ipv4_addresses[0]} port *;
	transfer-source ${srv.host.real.ipv4_addresses[0]};
	notify-source ${srv.host.real.ipv4_addresses[0]};
% endif
% if len(srv.host.real.ipv6_addresses) > 0:
	query-source-v6 address ${srv.host.real.ipv6_addresses[0]} port *;
	transfer-source-v6 ${srv.host.real.ipv6_addresses[0]};
	notify-source-v6 ${srv.host.real.ipv6_addresses[0]};
% endif

% if srv.get_bool_param('dnssec', True):
	dnssec-enable yes;
% if gen.name == 'iscbind99':
	dnssec-validation auto;
% elif gen.name == 'iscbind94':
	dnssec-validation yes;
% endif
% if gen.name in ('iscbind94', 'iscbind99'):
% if srv.get_bool_param('dnssec_accept_expired', False):
	dnssec-accept-expired yes;
% else:
	dnssec-accept-expired no;
% endif
% endif
% else:
	dnssec-enable no;
% endif

	root-delegation-only exclude {
		"ad"; "ar"; "biz"; "cr"; "cu"; "de"; "dm"; "id"; "lu"; "lv"; "md";
		"ms"; "museum"; "name"; "no"; "pa"; "pf"; "sr"; "to"; "tw"; "us";
		"uy";
	};

	statistics-file "${dtpl.var('stats_file')}";
	memstatistics-file "${dtpl.var('memstats_file')}";
	version "${srv.get_param('version_string', 'NetProfile DNS server')}";
};

logging {
	channel mainlog {
		syslog ${srv.get_param('syslog_facility', 'local5')};
		severity ${srv.get_param('syslog_severity', 'info')};
		print-category yes;
	};

	category default { mainlog; };
	category general { mainlog; };
};

include "${dtpl.var('rndc_file')}";
controls {
	inet 127.0.0.1 port 953 allow { 127.0.0.1/32; ::1/128; } keys { "${dtpl.var('rndc_key')}"; };
};

% for dnssrv in gen.dns_srvs:
% if dnssrv.get_param('key_value_gen'):
key ${dnssrv.get_param('key_name_gen')}${dnssrv.host}. {
	algorithm ${dnssrv.get_param('key_algo_gen', 'hmac-md5')};
	secret "${dnssrv.get_param('key_value_gen')}";
};
% endif
% if dnssrv.get_param('key_value_int'):
key ${dnssrv.get_param('key_name_int')}${dnssrv.host}. {
	algorithm ${dnssrv.get_param('key_algo_int', 'hmac-md5')};
	secret "${dnssrv.get_param('key_value_int')}";
};
% endif
% if dnssrv.get_param('key_value_ext'):
key ${dnssrv.get_param('key_name_ext')}${dnssrv.host}. {
	algorithm ${dnssrv.get_param('key_algo_ext', 'hmac-md5')};
	secret "${dnssrv.get_param('key_value_ext')}";
};
% endif
% endfor
% if srv.get_bool_param('split_dns', False):

/*
 * Internal view
 */
view "internal" {
% if srv.get_param('key_value_int'):
	match-clients { !key ${srv.get_param('key_name_int')}; ownnets; };
% else:
	match-clients { ownnets; };
% endif
	recursion yes;

	zone "." IN {
		type hint;
		file "${dtpl.var('zone_root')}";
	};
	zone "localhost" IN {
		type master;
		file "${dtpl.var('zone_localhost')}";
		allow-update { none; };
		notify no;
	};
	zone "127.in-addr.arpa" IN {
		type master;
		file "${dtpl.var('zone_127')}";
		allow-update { none; };
		notify no;
	};
% if dnssrv.get_param('key_value_int'):

% for dnssrv in gen.dns_srvs:
% for ipv4 in dnssrv.host.real.ipv4_addresses:
	server ${ipv4} { keys ${dnssrv.get_param('key_name_int')}${dnssrv.host}. ; };
% endfor
% for ipv6 in dnssrv.host.real.ipv6_addresses:
	server ${ipv6} { keys ${dnssrv.get_param('key_name_int')}${dnssrv.host}. ; };
% endfor
% endfor
% endif

% for dhl in gen.dns_domain_services:
% if (dhl.host_id == srv.host_id) and dhl.domain.enabled:
	zone "${dhl.domain}" IN {
% if dhl.type_id == 1:
		type master;
		file "${dtpl.var('zones_dir')}/${dtpl.var('pri_dir')}/${dhl.domain}.internal.zone";
		allow-update { none; };
		allow-transfer { selfacl; ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id in (1, 2)])}};
% if srv.get_bool_param('dnssec', True) and dhl.domain.signed:
% if gen.name == 'iscbind99':
		key-directory "${dtpl.var('keys_dir')}/int";
		inline-signing yes;
		auto-dnssec maintain;
% else:
		/* FIXME DNSSEC BEFORE BIND 9.9 */
% endif
% endif
% else:
		type slave;
		file "${dtpl.var('zones_dir')}/${dtpl.var('sec_dir')}/${dhl.domain}.internal.zone";
		masters { ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id == 1])}};
		allow-transfer { selfacl; ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id in (1, 2)])}};
% endif
	};
% for alias in dhl.domain.aliases:
	zone "${alias}" IN {
% if dhl.type_id == 1:
		type master;
		file "${dtpl.var('zones_dir')}/${dtpl.var('pri_dir')}/${alias}.internal.zone";
		allow-update { none; };
		allow-transfer { selfacl; ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id in (1, 2)])}};
% if srv.get_bool_param('dnssec', True) and dhl.domain.signed:
% if gen.name == 'iscbind99':
		key-directory "${dtpl.var('keys_dir')}/int";
		inline-signing yes;
		auto-dnssec maintain;
% else:
		/* FIXME DNSSEC BEFORE BIND 9.9 */
% endif
% endif
% else:
		type slave;
		file "${dtpl.var('zones_dir')}/${dtpl.var('sec_dir')}/${alias}.internal.zone";
		masters { ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id == 1])}};
		allow-transfer { selfacl; ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id in (1, 2)])}};
% endif
	};
% endfor
% endif
% endfor

% for rz in gen.all_ipv4_revzones:
% if not rz.ipv4_address.is_reserved:
	zone "${rz.zone_name}" IN {
		type master;
		file "${dtpl.var('zones_dir')}/${dtpl.var('rev_dir')}/${rz.zone_filename}.internal.zone";
		allow-update { none; };
		allow-transfer { dnsacl; };
	};
% endif
% endfor
% for rz in gen.all_ipv6_revzones:
% if not rz.ipv6_address.is_reserved:
	zone "${rz.zone_name}" IN {
		type master;
		file "${dtpl.var('zones_dir')}/${dtpl.var('rev_dir')}/${rz.zone_filename}.internal.zone";
		allow-update { none; };
		allow-transfer { dnsacl; };
	};
% endif
% endfor
};

/*
 * External view
 */
view "external" {
% if srv.get_param('key_value_ext'):
	match-clients { any; };
% else:
	match-clients { !ownnets; };
% endif
	recursion no;

	zone "." IN {
		type hint;
		file "${dtpl.var('zone_root')}";
	};
	zone "localhost" IN {
		type master;
		file "${dtpl.var('zone_localhost')}";
		allow-update { none; };
		notify no;
	};
	zone "127.in-addr.arpa" IN {
		type master;
		file "${dtpl.var('zone_127')}";
		allow-update { none; };
		notify no;
	};
% if dnssrv.get_param('key_value_ext'):

% for dnssrv in gen.dns_srvs:
% for ipv4 in dnssrv.host.real.ipv4_addresses:
	server ${ipv4} { keys ${dnssrv.get_param('key_name_ext')}${dnssrv.host}. ; };
% endfor
% for ipv6 in dnssrv.host.real.ipv6_addresses:
	server ${ipv6} { keys ${dnssrv.get_param('key_name_ext')}${dnssrv.host}. ; };
% endfor
% endfor
% endif

% for dhl in gen.dns_domain_services:
% if (dhl.host_id == srv.host_id) and dhl.domain.enabled and dhl.domain.public:
	zone "${dhl.domain}" IN {
% if dhl.type_id == 1:
		type master;
		file "${dtpl.var('zones_dir')}/${dtpl.var('pri_dir')}/${dhl.domain}.external.zone";
		allow-update { none; };
		allow-transfer { selfacl; ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id in (1, 2)])}};
% if srv.get_bool_param('dnssec', True) and dhl.domain.signed:
% if gen.name == 'iscbind99':
		key-directory "${dtpl.var('keys_dir')}/ext";
		inline-signing yes;
		auto-dnssec maintain;
% else:
		/* FIXME DNSSEC BEFORE BIND 9.9 */
% endif
% endif
% else:
		type slave;
		file "${dtpl.var('zones_dir')}/${dtpl.var('sec_dir')}/${dhl.domain}.external.zone";
		masters { ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id == 1])}};
		allow-transfer { selfacl; ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id in (1, 2)])}};
% endif
	};
% for alias in dhl.domain.aliases:
	zone "${alias}" IN {
% if dhl.type_id == 1:
		type master;
		file "${dtpl.var('zones_dir')}/${dtpl.var('pri_dir')}/${alias}.external.zone";
		allow-update { none; };
		allow-transfer { selfacl; ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id in (1, 2)])}};
% if srv.get_bool_param('dnssec', True) and dhl.domain.signed:
% if gen.name == 'iscbind99':
		key-directory "${dtpl.var('keys_dir')}/ext";
		inline-signing yes;
		auto-dnssec maintain;
% else:
		/* FIXME DNSSEC BEFORE BIND 9.9 */
% endif
% endif
% else:
		type slave;
		file "${dtpl.var('zones_dir')}/${dtpl.var('sec_dir')}/${alias}.external.zone";
		masters { ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id == 1])}};
		allow-transfer { selfacl; ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id in (1, 2)])}};
% endif
	};
% endfor
% endif
% endfor

% for rz in gen.all_ipv4_revzones:
% if (not rz.ipv4_address.is_reserved) and (not rz.ipv4_address.is_private) and (not rz.ipv4_address.is_link_local):
	zone "${rz.zone_name}" IN {
		type master;
		file "${dtpl.var('zones_dir')}/${dtpl.var('rev_dir')}/${rz.zone_filename}.external.zone";
		allow-update { none; };
		allow-transfer { dnsacl; };
	};
% endif
% endfor
% for rz in gen.all_ipv6_revzones:
% if (not rz.ipv6_address.is_reserved) and (not rz.ipv6_address.is_private) and (not rz.ipv6_address.is_link_local):
	zone "${rz.zone_name}" IN {
		type master;
		file "${dtpl.var('zones_dir')}/${dtpl.var('rev_dir')}/${rz.zone_filename}.external.zone";
		allow-update { none; };
		allow-transfer { dnsacl; };
	};
% endif
% endfor
};
% else:
/*
 * Generic view
 */
view "generic" {
	match-clients { any; };
	recursion no;

	zone "." IN {
		type hint;
		file "${dtpl.var('zone_root')}";
	};
	zone "localhost" IN {
		type master;
		file "${dtpl.var('zone_localhost')}";
		allow-update { none; };
		notify no;
	};
	zone "127.in-addr.arpa" IN {
		type master;
		file "${dtpl.var('zone_127')}";
		allow-update { none; };
		notify no;
	};
% if dnssrv.get_param('key_value_gen'):

% for dnssrv in gen.dns_srvs:
% for ipv4 in dnssrv.host.real.ipv4_addresses:
	server ${ipv4} { keys ${dnssrv.get_param('key_name_gen')}${dnssrv.host}. ; };
% endfor
% for ipv6 in dnssrv.host.real.ipv6_addresses:
	server ${ipv6} { keys ${dnssrv.get_param('key_name_gen')}${dnssrv.host}. ; };
% endfor
% endfor
% endif

% for dhl in gen.dns_domain_services:
% if (dhl.host_id == srv.host_id) and dhl.domain.enabled:
	zone "${dhl.domain}" IN {
% if dhl.type_id == 1:
		type master;
		file "${dtpl.var('zones_dir')}/${dtpl.var('pri_dir')}/${dhl.domain}.generic.zone";
		allow-update { none; };
		allow-transfer { selfacl; ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id in (1, 2)])}};
% if srv.get_bool_param('dnssec', True) and dhl.domain.signed:
% if gen.name == 'iscbind99':
		key-directory "${dtpl.var('keys_dir')}/gen";
		inline-signing yes;
		auto-dnssec maintain;
% else:
		/* FIXME DNSSEC BEFORE BIND 9.9 */
% endif
% endif
% else:
		type slave;
		file "${dtpl.var('zones_dir')}/${dtpl.var('sec_dir')}/${dhl.domain}.generic.zone";
		masters { ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id == 1])}};
		allow-transfer { selfacl; ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id in (1, 2)])}};
% endif
	};
% for alias in dhl.domain.aliases:
	zone "${alias}" IN {
% if dhl.type_id == 1:
		type master;
		file "${dtpl.var('zones_dir')}/${dtpl.var('pri_dir')}/${alias}.generic.zone";
		allow-update { none; };
		allow-transfer { selfacl; ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id in (1, 2)])}};
% if srv.get_bool_param('dnssec', True) and dhl.domain.signed:
% if gen.name == 'iscbind99':
		key-directory "${dtpl.var('keys_dir')}/gen";
		inline-signing yes;
		auto-dnssec maintain;
% else:
		/* FIXME DNSSEC BEFORE BIND 9.9 */
% endif
% endif
% else:
		type slave;
		file "${dtpl.var('zones_dir')}/${dtpl.var('sec_dir')}/${alias}.generic.zone";
		masters { ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id == 1])}};
		allow-transfer { selfacl; ${''.join([gen.host_iplist(s.host) for s in dhl.domain.services if s.type_id in (1, 2)])}};
% endif
	};
% endfor
% endif
% endfor

% for rz in gen.all_ipv4_revzones:
% if not rz.ipv4_address.is_reserved:
	zone "${rz.zone_name}" IN {
		type master;
		file "${dtpl.var('zones_dir')}/${dtpl.var('rev_dir')}/${rz.zone_filename}.generic.zone";
		allow-update { none; };
		allow-transfer { dnsacl; };
	};
% endif
% endfor
% for rz in gen.all_ipv6_revzones:
% if not rz.ipv6_address.is_reserved:
	zone "${rz.zone_name}" IN {
		type master;
		file "${dtpl.var('zones_dir')}/${dtpl.var('rev_dir')}/${rz.zone_filename}.generic.zone";
		allow-update { none; };
		allow-transfer { dnsacl; };
	};
% endif
% endfor
};
% endif
${dtpl.if_var('rootkey_file')}
include "${dtpl.var('rootkey_file')}";
${dtpl.endif}

