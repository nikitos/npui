## -*- coding: utf-8 -*-
$TTL 86400
; ========================================================================
; NetProfile
; Reverse zone configuration: ${srv.type.description or srv.type.name}
; For ${zonetype} zone "${rz.zone_name}"
; Autogenerated on ${now.date()} at ${now.time()}
; Do not modify - this file will be overwritten!
; ========================================================================
$ORIGIN ${rz.zone_name}.
@ IN SOA ${srv.host} ${srv.get_param('hostmaster', 'hostmaster.' + str(srv.host.domain) + '.')} (
	${rz}
	${srv.get_param('revzone_refresh', '3600')}
	${srv.get_param('revzone_retry', '300')}
	${srv.get_param('revzone_expire', '1814400')}
	${srv.get_param('revzone_minimum', '3600')}
)

; ------------------------------------------------------------------------
; Name servers (NS RRs)
; ------------------------------------------------------------------------
% for host in set(xsrv.host for xsrv in gen.dns_srvs):
@ IN NS ${host}.
% endfor

; ------------------------------------------------------------------------
; Reverse lookup pointers (PTR RRs)
; ------------------------------------------------------------------------
% if rztype == 4:
% for ipv4 in gen.revzone_ipv4(rz):
% if gen.check_vis(zonetype, ipv4.visibility) and ((zonetype in ('internal', 'generic')) or not ipv4.address.is_private):
% if ipv4.ttl:
${ipv4.ptr_name} ${ipv4.ttl} IN PTR ${ipv4.host}.
% else:
${ipv4.ptr_name} IN PTR ${ipv4.host}.
% endif
% endif
% endfor
% elif rztype == 6:
% for ipv6 in gen.revzone_ipv6(rz):
% if gen.check_vis(zonetype, ipv6.visibility) and ((zonetype in ('internal', 'generic')) or not ipv6.address.is_private):
% if ipv6.ttl:
${ipv6.ptr_name} ${ipv6.ttl} IN PTR ${ipv6.host}.
% else:
${ipv6.ptr_name} IN PTR ${ipv6.host}.
% endif
% endif
% endfor
% endif

