## -*- coding: utf-8 -*-
##
## NetProfile: Configuration generator for ISC BIND (reverse zones)
## Copyright Â© 2015-2017 Alex Unigovsky
##
## This file is part of NetProfile.
## NetProfile is free software: you can redistribute it and/or
## modify it under the terms of the GNU Affero General Public
## License as published by the Free Software Foundation, either
## version 3 of the License, or (at your option) any later
## version.
##
## NetProfile is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
## GNU Affero General Public License for more details.
##
## You should have received a copy of the GNU Affero General
## Public License along with NetProfile. If not, see
## <http://www.gnu.org/licenses/>.
##
$TTL 86400
; ========================================================================
; NetProfile
; Reverse zone configuration: ${srv.type.description or srv.type.name}
; For ${zonetype} zone "${rz.zone_name}"
; Autogenerated on ${now.date()} at ${now.time()}
; Do not modify - this file will be overwritten!
; ========================================================================
$ORIGIN ${rz.zone_name}.
@ IN SOA ${srv.host} ${srv.get_param('hostmaster', 'hostmaster.' + str(srv.host.domain) + '.')} (
	${rz}
	${srv.get_param('revzone_refresh', '3600')}
	${srv.get_param('revzone_retry', '300')}
	${srv.get_param('revzone_expire', '1814400')}
	${srv.get_param('revzone_minimum', '3600')}
)

; ------------------------------------------------------------------------
; Name servers (NS RRs)
; ------------------------------------------------------------------------
% for host in set(xsrv.host for xsrv in gen.dns_srvs):
@ IN NS ${host}.
% endfor

; ------------------------------------------------------------------------
; Reverse lookup pointers (PTR RRs)
; ------------------------------------------------------------------------
% if rztype == 4:
% for ipv4 in gen.revzone_ipv4(rz):
% if gen.check_vis(zonetype, ipv4.visibility) and ((zonetype in ('internal', 'generic')) or not ipv4.address.is_private):
% if ipv4.ttl:
${ipv4.ptr_name} ${ipv4.ttl} IN PTR ${ipv4.host}.
% else:
${ipv4.ptr_name} IN PTR ${ipv4.host}.
% endif
% endif
% endfor
% elif rztype == 6:
% for ipv6 in gen.revzone_ipv6(rz):
% if gen.check_vis(zonetype, ipv6.visibility) and ((zonetype in ('internal', 'generic')) or not ipv6.address.is_private):
% if ipv6.ttl:
${ipv6.ptr_name} ${ipv6.ttl} IN PTR ${ipv6.host}.
% else:
${ipv6.ptr_name} IN PTR ${ipv6.host}.
% endif
% endif
% endfor
% endif

