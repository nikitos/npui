## -*- coding: utf-8 -*-
<%!
	from netprofile_hosts.models import HostAliasType

	def escape_txtrr(text):
		if text is None:
			return ''
		return text.replace('\\', '\\\\').replace('"', '\\"')
%>\
$TTL 86400
; ========================================================================
; NetProfile
; Zone configuration: ${srv.type.description or srv.type.name}
; For ${zonetype} zone "${dname}"
; Autogenerated on ${now.date()} at ${now.time()}
; Do not modify - this file will be overwritten!
; ========================================================================
$ORIGIN ${dname}.
@ IN SOA ${srv.host}. ${srv.get_param('hostmaster', 'hostmaster.' + dname + '.')} (
	${domain.serial}
	${domain.soa_refresh}
	${domain.soa_retry}
	${domain.soa_expire}
	${domain.soa_minimum}
)

; ------------------------------------------------------------------------
; Name servers (NS RRs)
; ------------------------------------------------------------------------
% for dhl in domain.services:
% if dhl.type_id in (1, 2):
@ IN NS ${dhl.host}.
% endif
% endfor
% for subdom in domain.children:
% if subdom.enabled and (subdom.public or (zonetype in ('internal', 'generic'))):
% for subdhl in subdom.services:
% if subdhl.type_id in (1, 2):
${subdom.name}.${dname}. IN NS ${subdhl.host}.
% endif
% endfor
% endif
% endfor
% for subalias in domain.children_aliases:
% if subalias.domain.enabled and (subalias.domain.public or (zonetype in ('internal', 'generic'))):
% for sadhl in subalias.domain.services:
% if sadhl.type_id in (1, 2):
${subalias.name}.${dname}. IN NS ${sadhl.host}.
% endif
% endfor
% endif
% endfor

; ------------------------------------------------------------------------
; Mail exchangers (MX RRs)
; ------------------------------------------------------------------------
% for dhl in domain.services:
% if dhl.type_id in (3, 4):
@ IN MX ${'10' if dhl.type_id == 3 else '20'} ${dhl.host}.
% endif
% endfor

; ------------------------------------------------------------------------
; Text records (TXT RRs)
; ------------------------------------------------------------------------
% if srv.get_bool_param('gen_spf', True) and domain.spf_generate:
% if domain.spf_error_message:
spffail.${dname}. IN TXT "${domain.spf_error_message | escape_txtrr}"
% else:
spffail.${dname}. IN TXT "Email message from %{s} using SMTP server at %{i} was rejected by %{c} (%{r}) at %{t} because it failed the SPF records check for the domain %{d}."
% endif
% if domain.spf_rule:
@ IN TXT "${domain.spf_rule | escape_txtrr}"
% if gen.name in ('iscbind94', 'iscbind99'):
@ IN SPF "${domain.spf_rule | escape_txtrr}"
% endif
% else:
@ IN TXT "v=spf1 mx -all exp=spffail.${dname}"
% if gen.name in ('iscbind94', 'iscbind99'):
@ IN SPF "v=spf1 mx -all exp=spffail.${dname}"
% endif
% endif
% endif
% if srv.get_bool_param('gen_dkim', False) and domain.dkim_data:
${domain.dkim_name if domain.dkim_name else 'key'}._domainkey.${dname}. IN TXT "v=DKIM1${gen.dkim_flags(domain)};k=rsa;p=${domain.dkim_data | escape_txtrr};"
_domainkey.${dname}. IN TXT "o=${'-' if domain.dkim_strict else '~'};"
_adsp._domainkey.${dname}. IN TXT "dkim=${'discardable' if domain.dkim_strict else 'all'};"
% endif
% if srv.get_bool_param('gen_dmarc', False) and (domain.spf_generate or domain.dkim_data):
_dmarc.${dname}. IN TXT "v=DMARC1;p=${'reject' if (domain.dkim_data and domain.dkim_strict) else 'quarantine'}${';' + domain.dmarc_trailer if domain.dmarc_trailer else '' | escape_txtrr}"
% endif
% for txtrr in domain.txt_records:
% if txtrr.name and txtrr.value:
% if txtrr.ttl:
${txtrr.name} ${txtrr.ttl} IN "${txtrr.value | escape_txtrr}"
% else:
% endif
% endif
% endfor

; ------------------------------------------------------------------------
; Default host entries (origin A/AAAA RRs)
; ------------------------------------------------------------------------
% for dhl in domain.services:
% if dhl.type_id == 5:
% for ipv4 in dhl.host.real.ipv4_addresses:
% if gen.check_vis(zonetype, ipv4.visibility):
% if ipv4.ttl:
@ ${ipv4.ttl} IN A ${ipv4}
% else:
@ IN A ${ipv4}
% endif
% endif
% endfor
% for ipv6 in dhl.host.real.ipv6_addresses:
% if gen.check_vis(zonetype, ipv6.visibility):
% if ipv6.ttl:
@ ${ipv6.ttl} IN AAAA ${ipv6}
% else:
@ IN AAAA ${ipv6}
% endif
% endif
% endfor
% endif
% endfor

; ------------------------------------------------------------------------
; Services (SRV RRs)
; ------------------------------------------------------------------------
% for srvrr in gen.domain_srv_rr(domain):
% if gen.check_vis(zonetype, srvrr.visibility):
% for port in srvrr.type.port_range:
${srvrr.type.record_name}.${dname}. IN SRV ${srvrr.priority} ${srvrr.weight} ${port} ${srvrr.host}.
% endfor
% endif
% endfor

; ------------------------------------------------------------------------
; IP addresses (A/AAAA RRs)
; ------------------------------------------------------------------------
% for host in hosts:
% if (not host.original) or (host.alias_type == HostAliasType.numeric):
% for ipv4 in host.real.ipv4_addresses:
% if gen.check_vis(zonetype, ipv4.visibility) and ((zonetype in ('internal', 'generic')) or not ipv4.address.is_private):
% if ipv4.ttl:
${host.name}.${dname}. ${ipv4.ttl} IN A ${ipv4}
% else:
${host.name}.${dname}. IN A ${ipv4}
% endif
% endif
% endfor
% for ipv6 in host.real.ipv6_addresses:
% if gen.check_vis(zonetype, ipv6.visibility) and ((zonetype in ('internal', 'generic')) or not ipv6.address.is_private):
% if ipv6.ttl:
${host.name}.${dname}. ${ipv6.ttl} IN A ${ipv6}
% else:
${host.name}.${dname}. IN A ${ipv6}
% endif
% endif
% endfor
% endif
% endfor

; ------------------------------------------------------------------------
; Host aliases (CNAME RRs)
; ------------------------------------------------------------------------
% for host in hosts:
% if host.original and (host.alias_type == HostAliasType.symbolic):
${host.name}.${dname}. IN CNAME ${host.original}.
% endif
% endfor

