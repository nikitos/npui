"""Initial revision

Revision ID: 98de7f7fe99d
Revises: 
Create Date: 2017-09-25 13:58:39.286645

"""

# revision identifiers, used by Alembic.
revision = '98de7f7fe99d'
down_revision = None
branch_labels = ('domains',)
depends_on = '033d52604eac'

from alembic import op
import sqlalchemy as sa
from sqlalchemy import FetchedValue
from netprofile.db import ddl as npd
from netprofile.db import fields as npf

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('domains_def',
    sa.Column('domainid', npf.UInt32(), npd.Comment('Domain ID'), nullable=False, default=sa.Sequence('domains_def_domainid_seq')),
    sa.Column('parentid', npf.UInt32(), npd.Comment('Parent domain ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Domain name'), nullable=False),
    sa.Column('enabled', npf.NPBoolean(), npd.Comment('Is domain enabled?'), server_default=npf.npbool(True), nullable=False),
    sa.Column('public', npf.NPBoolean(), npd.Comment('Is domain visible to outsiders?'), server_default=npf.npbool(False), nullable=False),
    sa.Column('signed', npf.NPBoolean(), npd.Comment('Needs DNSSEC signing?'), server_default=npf.npbool(False), nullable=False),
    sa.Column('soa_refresh', npf.UInt32(), npd.Comment('SOA refresh field'), nullable=False),
    sa.Column('soa_retry', npf.UInt32(), npd.Comment('SOA retry field'), nullable=False),
    sa.Column('soa_expire', npf.UInt32(), npd.Comment('SOA expire field'), nullable=False),
    sa.Column('soa_minimum', npf.UInt32(), npd.Comment('SOA minimum field'), nullable=False),
    sa.Column('serial_date', sa.Date(), npd.Comment('Domain serial date'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('serial_rev', npf.UInt8(), npd.Comment('Domain serial revision'), server_default=sa.text('1'), nullable=False),
    sa.Column('dkim_name', npf.ASCIIString(length=255), npd.Comment('DKIM public key name'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('dkim_data', npf.ASCIIText(), npd.Comment('DKIM public key body'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('dkim_test', npf.NPBoolean(), npd.Comment('Use DKIM in test mode'), server_default=npf.npbool(False), nullable=False),
    sa.Column('dkim_subdomains', npf.NPBoolean(), npd.Comment('Propagate DKIM rules to subdomains'), server_default=npf.npbool(False), nullable=False),
    sa.Column('dkim_strict', npf.NPBoolean(), npd.Comment('Use DKIM strict check and discard'), server_default=npf.npbool(False), nullable=False),
    sa.Column('spf_gen', npf.NPBoolean(), npd.Comment('Generate SPF record'), server_default=npf.npbool(True), nullable=False),
    sa.Column('spf_rule', npf.ASCIIText(), npd.Comment('Custom SPF rule'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('spf_errmsg', sa.UnicodeText(), npd.Comment('Custom SPF error explanation string'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('dmarc_trailer', npf.ASCIIString(length=255), npd.Comment('DMARC record trailer'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('Domain description'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['parentid'], ['domains_def.domainid'], name='domains_def_fk_parentid', onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('domainid', name=op.f('domains_def_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('domains_def', 'Domains')
    op.create_trigger('netprofile_domains', 'domains_def', 'after', 'insert', '98de7f7fe99d')
    op.create_trigger('netprofile_domains', 'domains_def', 'after', 'update', '98de7f7fe99d')
    op.create_trigger('netprofile_domains', 'domains_def', 'after', 'delete', '98de7f7fe99d')
    op.create_index('domains_def_u_domain', 'domains_def', ['parentid', 'name'], unique=True)
    op.create_table('domains_hltypes',
    sa.Column('hltypeid', npf.UInt32(), npd.Comment('Domains-hosts linkage type ID'), nullable=False, default=sa.Sequence('domains_hltypes_hltypeid_seq', start=101, increment=1)),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Domains-hosts linkage type name'), nullable=False),
    sa.Column('unique', npf.NPBoolean(), npd.Comment('Is unique per domain?'), server_default=npf.npbool(False), nullable=False),
    sa.PrimaryKeyConstraint('hltypeid', name=op.f('domains_hltypes_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('domains_hltypes', 'Domains-hosts linkage types')
    op.create_index('domains_hltypes_u_name', 'domains_hltypes', ['name'], unique=True)
    op.create_table('domains_aliases',
    sa.Column('daid', npf.UInt32(), npd.Comment('Domain alias ID'), nullable=False, default=sa.Sequence('domains_aliases_daid_seq')),
    sa.Column('parentid', npf.UInt32(), npd.Comment('Parent domain ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('domainid', npf.UInt32(), npd.Comment('Original domain ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Alias name'), nullable=False),
    sa.ForeignKeyConstraint(['domainid'], ['domains_def.domainid'], name='domains_aliases_fk_domainid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parentid'], ['domains_def.domainid'], name='domains_aliases_fk_parentid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('daid', name=op.f('domains_aliases_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('domains_aliases', 'Domains Aliases')
    op.create_index('domains_aliases_i_domain', 'domains_aliases', ['domainid'], unique=False)
    op.create_index('domains_aliases_u_da', 'domains_aliases', ['parentid', 'name'], unique=True)
    op.create_table('domains_txtrr',
    sa.Column('txtrrid', npf.UInt32(), npd.Comment('Text record ID'), nullable=False, default=sa.Sequence('domains_txtrr_txtrrid_seq')),
    sa.Column('domainid', npf.UInt32(), npd.Comment('Domain ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('name', npf.ASCIIString(length=255), npd.Comment('Text record name'), nullable=False),
    sa.Column('ttl', npf.UInt32(), npd.Comment('Time to live'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('vis', npf.DeclEnumType(name='ObjectVisibility', values=['B', 'I', 'E']), npd.Comment('Text record visibility'), server_default=sa.text("'B'"), nullable=False),
    sa.Column('value', npf.ASCIITinyText(), npd.Comment('Text record value'), nullable=False),
    sa.ForeignKeyConstraint(['domainid'], ['domains_def.domainid'], name='domains_txtrr_fk_domainid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('txtrrid', name=op.f('domains_txtrr_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('domains_txtrr', 'Domain TXT records')
    op.create_trigger('netprofile_domains', 'domains_txtrr', 'before', 'insert', '98de7f7fe99d')
    op.create_trigger('netprofile_domains', 'domains_txtrr', 'before', 'update', '98de7f7fe99d')
    op.create_index('domains_txtrr_u_txtrr', 'domains_txtrr', ['domainid', 'name'], unique=True)
    op.create_function('domains', npd.SQLFunction('domain_get_full', args=[npd.SQLFunctionArgument('did', npf.UInt32(), None)], returns=sa.Unicode(length=255), comment='Get fully qualified name of a domain', reads_sql=True, writes_sql=False, is_procedure=False, label=None), '98de7f7fe99d')
    op.create_view('domains_enabled', {'mssql': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.[public] AS [public], domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.enabled = 1', 'oracle': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def."public" AS "public", domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.enabled = 1', 'mysql': "SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.public AS public, domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.enabled = 'Y'", 'postgresql': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.public AS public, domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.enabled = true'}, check_option='CASCADED')
    op.create_view('domains_signed', {'mssql': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.[public] AS [public], domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.signed = 1', 'oracle': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def."public" AS "public", domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.signed = 1', 'mysql': "SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.public AS public, domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.signed = 'Y'", 'postgresql': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.public AS public, domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.signed = true'}, check_option='CASCADED')
    op.create_view('domains_base', {'mssql': 'SELECT domains_def.domainid AS domainid, NULL AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.[public] AS [public], domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.parentid IS NULL', 'oracle': 'SELECT domains_def.domainid AS domainid, NULL AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def."public" AS "public", domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.parentid IS NULL', 'mysql': 'SELECT domains_def.domainid AS domainid, NULL AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.public AS public, domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.parentid IS NULL', 'postgresql': 'SELECT domains_def.domainid AS domainid, NULL AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.public AS public, domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.parentid IS NULL'}, check_option='CASCADED')
    op.create_view('domains_public', {'mssql': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.[public] AS [public], domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.[public] = 1', 'oracle': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def."public" AS "public", domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def."public" = 1', 'mysql': "SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.public AS public, domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.public = 'Y'", 'postgresql': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.public AS public, domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.public = true'}, check_option='CASCADED')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_view('domains_public', {'mssql': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.[public] AS [public], domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.[public] = 1', 'oracle': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def."public" AS "public", domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def."public" = 1', 'mysql': "SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.public AS public, domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.public = 'Y'", 'postgresql': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.public AS public, domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.public = true'}, check_option='CASCADED')
    op.drop_view('domains_base', {'mssql': 'SELECT domains_def.domainid AS domainid, NULL AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.[public] AS [public], domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.parentid IS NULL', 'oracle': 'SELECT domains_def.domainid AS domainid, NULL AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def."public" AS "public", domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.parentid IS NULL', 'mysql': 'SELECT domains_def.domainid AS domainid, NULL AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.public AS public, domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.parentid IS NULL', 'postgresql': 'SELECT domains_def.domainid AS domainid, NULL AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.public AS public, domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.parentid IS NULL'}, check_option='CASCADED')
    op.drop_view('domains_signed', {'mssql': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.[public] AS [public], domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.signed = 1', 'oracle': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def."public" AS "public", domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.signed = 1', 'mysql': "SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.public AS public, domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.signed = 'Y'", 'postgresql': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.public AS public, domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.signed = true'}, check_option='CASCADED')
    op.drop_view('domains_enabled', {'mssql': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.[public] AS [public], domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.enabled = 1', 'oracle': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def."public" AS "public", domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.enabled = 1', 'mysql': "SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.public AS public, domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.enabled = 'Y'", 'postgresql': 'SELECT domains_def.domainid AS domainid, domains_def.parentid AS parentid, domains_def.name AS name, domains_def.enabled AS enabled, domains_def.public AS public, domains_def.signed AS signed, domains_def.soa_refresh AS soa_refresh, domains_def.soa_retry AS soa_retry, domains_def.soa_expire AS soa_expire, domains_def.soa_minimum AS soa_minimum, domains_def.serial_date AS serial_date, domains_def.serial_rev AS serial_rev, domains_def.dkim_name AS dkim_name, domains_def.dkim_data AS dkim_data, domains_def.descr AS descr \nFROM domains_def \nWHERE domains_def.enabled = true'}, check_option='CASCADED')
    op.drop_function('domains', npd.SQLFunction('domain_get_full', args=[npd.SQLFunctionArgument('did', npf.UInt32(), None)], returns=sa.Unicode(length=255), comment='Get fully qualified name of a domain', reads_sql=True, writes_sql=False, is_procedure=False, label=None), '98de7f7fe99d')
    op.drop_index('domains_txtrr_u_txtrr', table_name='domains_txtrr')
    op.drop_table('domains_txtrr')
    op.drop_index('domains_aliases_u_da', table_name='domains_aliases')
    op.drop_index('domains_aliases_i_domain', table_name='domains_aliases')
    op.drop_table('domains_aliases')
    op.drop_index('domains_hltypes_u_name', table_name='domains_hltypes')
    op.drop_table('domains_hltypes')
    op.drop_index('domains_def_u_domain', table_name='domains_def')
    op.drop_table('domains_def')
    # ### end Alembic commands ###

