"""Initial revision

Revision ID: 5b808c910195
Revises: 
Create Date: 2017-09-25 13:42:33.698647

"""

# revision identifiers, used by Alembic.
revision = '5b808c910195'
down_revision = None
branch_labels = ('geo',)
depends_on = '033d52604eac'

from alembic import op
import sqlalchemy as sa
from sqlalchemy import FetchedValue
from netprofile.db import ddl as npd
from netprofile.db import fields as npf

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addr_cities',
    sa.Column('cityid', npf.UInt32(), npd.Comment('City ID'), nullable=False, default=sa.Sequence('addr_cities_cityid_seq')),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('City name'), nullable=False),
    sa.Column('prefix', sa.Unicode(length=32), npd.Comment('Contract prefix'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('City description'), server_default=sa.text('NULL'), nullable=True),
    sa.PrimaryKeyConstraint('cityid', name=op.f('addr_cities_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('addr_cities', 'Cities')
    op.create_index('addr_cities_u_name', 'addr_cities', ['name'], unique=True)
    op.create_table('addr_hgroups_def',
    sa.Column('ahgid', npf.UInt32(), npd.Comment('House group ID'), nullable=False, default=sa.Sequence('addr_hgroups_def_ahgid_seq')),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('House group name'), nullable=False),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('House group description'), server_default=sa.text('NULL'), nullable=True),
    sa.PrimaryKeyConstraint('ahgid', name=op.f('addr_hgroups_def_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('addr_hgroups_def', 'House groups')
    op.create_index('addr_hgroups_def_u_name', 'addr_hgroups_def', ['name'], unique=True)
    op.create_table('addr_districts',
    sa.Column('districtid', npf.UInt32(), npd.Comment('District ID'), nullable=False, default=sa.Sequence('addr_districts_districtid_seq')),
    sa.Column('cityid', npf.UInt32(), npd.Comment('City ID'), nullable=False),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('District name'), nullable=False),
    sa.Column('prefix', sa.Unicode(length=32), npd.Comment('Contract prefix'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('District description'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['cityid'], ['addr_cities.cityid'], name='addr_districts_fk_cityid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('districtid', name=op.f('addr_districts_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('addr_districts', 'Districts')
    op.create_index('addr_districts_i_cityid', 'addr_districts', ['cityid'], unique=False)
    op.create_index('addr_districts_u_name', 'addr_districts', ['name'], unique=True)
    op.create_table('addr_streets',
    sa.Column('streetid', npf.UInt32(), npd.Comment('Street ID'), nullable=False, default=sa.Sequence('addr_streets_streetid_seq')),
    sa.Column('cityid', npf.UInt32(), npd.Comment('City ID'), nullable=False),
    sa.Column('districtid', npf.UInt32(), npd.Comment('District ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Street name'), nullable=False),
    sa.Column('prefix', sa.Unicode(length=8), npd.Comment('Street name prefix'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('suffix', sa.Unicode(length=8), npd.Comment('Street name suffix'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('Street description'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['cityid'], ['addr_cities.cityid'], name='addr_streets_fk_cityid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['districtid'], ['addr_districts.districtid'], name='addr_streets_fk_districtid', onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('streetid', name=op.f('addr_streets_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('addr_streets', 'Streets')
    op.create_index('addr_streets_i_districtid', 'addr_streets', ['districtid'], unique=False)
    op.create_index('addr_streets_i_name', 'addr_streets', ['name'], unique=False)
    op.create_index('addr_streets_u_street', 'addr_streets', ['cityid', 'name', 'prefix', 'suffix'], unique=True)
    op.create_table('addr_houses',
    sa.Column('houseid', npf.UInt32(), npd.Comment('House ID'), nullable=False, default=sa.Sequence('addr_houses_houseid_seq')),
    sa.Column('streetid', npf.UInt32(), npd.Comment('Street ID'), nullable=False),
    sa.Column('districtid', npf.UInt32(), npd.Comment('District ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('number', npf.UInt16(), npd.Comment('House number'), server_default=sa.text('0'), nullable=False),
    sa.Column('building', npf.UInt16(), npd.Comment('House building'), server_default=sa.text('0'), nullable=False),
    sa.Column('num_slash', npf.UInt16(), npd.Comment('Second house number'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('num_suffix', sa.Unicode(length=32), npd.Comment('House number suffix'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('entrnum', npf.UInt8(), npd.Comment('Number of entrances'), server_default=sa.text('1'), nullable=False),
    sa.Column('postindex', sa.Unicode(length=8), npd.Comment('Postal code'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('House description'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['districtid'], ['addr_districts.districtid'], name='addr_houses_fk_districtid', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['streetid'], ['addr_streets.streetid'], name='addr_houses_fk_streetid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('houseid', name=op.f('addr_houses_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('addr_houses', 'Houses')
    op.create_index('addr_houses_i_districtid', 'addr_houses', ['districtid'], unique=False)
    op.create_index('addr_houses_u_house', 'addr_houses', ['streetid', 'number', 'num_slash', 'num_suffix', 'building'], unique=True)
    op.create_table('addr_hgroups_houses',
    sa.Column('ahghid', npf.UInt32(), npd.Comment('House group membership ID'), nullable=False, default=sa.Sequence('addr_hgroups_houses_ahghid_seq')),
    sa.Column('ahgid', npf.UInt32(), npd.Comment('House group ID'), nullable=False),
    sa.Column('houseid', npf.UInt32(), npd.Comment('House ID'), nullable=False),
    sa.ForeignKeyConstraint(['ahgid'], ['addr_hgroups_def.ahgid'], name='addr_hgroups_houses_fk_ahgid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['houseid'], ['addr_houses.houseid'], name='addr_hgroups_houses_fk_houseid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ahghid', name=op.f('addr_hgroups_houses_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('addr_hgroups_houses', 'House group memberships')
    op.create_index('addr_hgroups_houses_i_houseid', 'addr_hgroups_houses', ['houseid'], unique=False)
    op.create_index('addr_hgroups_houses_u_member', 'addr_hgroups_houses', ['ahgid', 'houseid'], unique=True)
    op.create_table('addr_places',
    sa.Column('placeid', npf.UInt32(), npd.Comment('Place ID'), nullable=False, default=sa.Sequence('addr_places_placeid_seq')),
    sa.Column('houseid', npf.UInt32(), npd.Comment('House ID'), nullable=False),
    sa.Column('number', npf.UInt16(), npd.Comment('Place number'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Place name'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('entrance', npf.UInt8(), npd.Comment('Entrance number'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('floor', npf.UInt8(), npd.Comment('Floor number'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('Place description'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['houseid'], ['addr_houses.houseid'], name='addr_places_fk_houseid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('placeid', name=op.f('addr_places_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('addr_places', 'Places')
    op.create_index('addr_places_i_houseid', 'addr_places', ['houseid'], unique=False)
    op.create_index('addr_places_u_number', 'addr_places', ['number'], unique=True)
    op.create_table('users_locations',
    sa.Column('ulocid', npf.UInt32(), npd.Comment('User location ID'), nullable=False, default=sa.Sequence('users_locations_ulocid_seq')),
    sa.Column('uid', npf.UInt32(), npd.Comment('User ID'), nullable=False),
    sa.Column('primary', npf.NPBoolean(), npd.Comment('Primary flag'), server_default=npf.npbool(False), nullable=False),
    sa.Column('atype', npf.DeclEnumType(name='AddressType', values=['home', 'work', 'post', 'parc', 'bill']), npd.Comment('Address type'), server_default=sa.text("'work'"), nullable=False),
    sa.Column('country', sa.CHAR(length=2), npd.Comment('ISO 3166-1 alpha-2 country code'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('stprov', sa.Unicode(length=255), npd.Comment('State or province name'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('city', sa.Unicode(length=255), npd.Comment('City name'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('addr', sa.Unicode(length=255), npd.Comment('Freeform address'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('houseid', npf.UInt32(), npd.Comment('House ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('entrance', npf.UInt8(), npd.Comment('Entrance number'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('floor', npf.Int16(), npd.Comment('Floor number'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('flat', npf.UInt16(), npd.Comment('Flat/office number'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('room', sa.Unicode(length=8), npd.Comment('Room identifier'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('entrycode', sa.Unicode(length=8), npd.Comment('Entry code'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('postindex', sa.Unicode(length=8), npd.Comment('Postal code'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('Address description'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['houseid'], ['addr_houses.houseid'], name='users_locations_fk_houseid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['uid'], ['users.uid'], name='users_locations_fk_uid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ulocid', name=op.f('users_locations_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('users_locations', 'User locations')
    op.create_index('users_locations_i_houseid', 'users_locations', ['houseid'], unique=False)
    op.create_index('users_locations_i_uid', 'users_locations', ['uid'], unique=False)
    op.create_function('geo', npd.SQLFunction('addr_list_street', args=[npd.SQLFunctionArgument('sid', npf.UInt32(), 'IN')], returns=None, comment='List all houses on a given street', reads_sql=True, writes_sql=False, is_procedure=True, label=None), '5b808c910195')
    op.create_function('geo', npd.SQLFunction('addr_format_compact', args=[npd.SQLFunctionArgument('streetname', sa.Unicode(length=255), None), npd.SQLFunctionArgument('num', npf.UInt16(), None), npd.SQLFunctionArgument('num_slash', npf.UInt16(), None), npd.SQLFunctionArgument('num_suffix', sa.Unicode(length=32), None), npd.SQLFunctionArgument('bld', npf.UInt16(), None), npd.SQLFunctionArgument('fl', npf.UInt16(), None)], returns=sa.Unicode(length=255), comment='Format compact address', reads_sql=False, writes_sql=False, is_procedure=False, label=None), '5b808c910195')
    op.create_function('geo', npd.SQLFunction('addr_format', args=[npd.SQLFunctionArgument('streetname', sa.Unicode(length=255), None), npd.SQLFunctionArgument('prefix', sa.Unicode(length=8), None), npd.SQLFunctionArgument('suffix', sa.Unicode(length=8), None), npd.SQLFunctionArgument('num', npf.UInt16(), None), npd.SQLFunctionArgument('num_slash', npf.UInt16(), None), npd.SQLFunctionArgument('num_suffix', sa.Unicode(length=32), None), npd.SQLFunctionArgument('bld', npf.UInt16(), None), npd.SQLFunctionArgument('fl', npf.UInt16(), None)], returns=sa.Unicode(length=255), comment='Format full address', reads_sql=False, writes_sql=False, is_procedure=False, label=None), '5b808c910195')
    op.create_function('geo', npd.SQLFunction('addr_get_full', args=[npd.SQLFunctionArgument('hid', npf.UInt32(), None)], returns=sa.Unicode(length=255), comment='Get full address of a house by its ID', reads_sql=True, writes_sql=False, is_procedure=False, label=None), '5b808c910195')
    op.create_function('geo', npd.SQLFunction('addr_list_district', args=[npd.SQLFunctionArgument('did', npf.UInt32(), 'IN')], returns=None, comment='List all houses in a given district', reads_sql=True, writes_sql=False, is_procedure=True, label=None), '5b808c910195')
    op.create_function('geo', npd.SQLFunction('addr_list_entr', args=[npd.SQLFunctionArgument('minentr', npf.UInt8(), 'IN')], returns=None, comment='List all houses which have at least given number of entries', reads_sql=True, writes_sql=False, is_procedure=True, label=None), '5b808c910195')
    op.create_view('addr_full', {'postgresql': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building', 'mssql': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building', 'mysql': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses INNER JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid INNER JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building', 'oracle': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, addr_houses."number", addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_streets.name, addr_houses."number", addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building'}, check_option=None)
    op.create_view('addr_extra', {'postgresql': "SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, concat_ws(' ', concat(addr_cities.name, ','), concat(addr_districts.name, ','), addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL)) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid LEFT OUTER JOIN addr_districts ON addr_districts.districtid = addr_streets.districtid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_districts.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building", 'mssql': "SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, concat_ws(' ', concat(addr_cities.name, ','), concat(addr_districts.name, ','), addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL)) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid LEFT OUTER JOIN addr_districts ON addr_districts.districtid = addr_streets.districtid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_districts.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building", 'mysql': "SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, concat_ws(' ', concat(addr_cities.name, ','), concat(addr_districts.name, ','), addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL)) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses INNER JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid LEFT OUTER JOIN addr_districts ON addr_districts.districtid = addr_streets.districtid INNER JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_districts.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building", 'oracle': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, concat_ws(\' \', concat(addr_cities.name, \',\'), concat(addr_districts.name, \',\'), addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, addr_houses."number", addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL)) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid LEFT OUTER JOIN addr_districts ON addr_districts.districtid = addr_streets.districtid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_districts.name, addr_streets.name, addr_houses."number", addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building'}, check_option=None)
    op.create_view('addr_compact', {'postgresql': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_format_compact(addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building', 'mssql': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_format_compact(addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building', 'mysql': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_format_compact(addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses INNER JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid INNER JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building', 'oracle': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_format_compact(addr_streets.name, addr_houses."number", addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_streets.name, addr_houses."number", addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building'}, check_option=None)
    op.create_view('addr_streetnames', {'postgresql': 'SELECT addr_streets.streetid AS streetid, addr_districts.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_districts.name AS district, addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, NULL, NULL, NULL, NULL, NULL) AS fullname \nFROM addr_streets LEFT OUTER JOIN addr_districts ON addr_districts.districtid = addr_streets.districtid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_districts.name, addr_streets.name', 'mssql': 'SELECT addr_streets.streetid AS streetid, addr_districts.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_districts.name AS district, addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, NULL, NULL, NULL, NULL, NULL) AS fullname \nFROM addr_streets LEFT OUTER JOIN addr_districts ON addr_districts.districtid = addr_streets.districtid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_districts.name, addr_streets.name', 'mysql': 'SELECT addr_streets.streetid AS streetid, addr_districts.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_districts.name AS district, addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, NULL, NULL, NULL, NULL, NULL) AS fullname \nFROM addr_streets LEFT OUTER JOIN addr_districts ON addr_districts.districtid = addr_streets.districtid INNER JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_districts.name, addr_streets.name', 'oracle': 'SELECT addr_streets.streetid AS streetid, addr_districts.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_districts.name AS district, addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, NULL, NULL, NULL, NULL, NULL) AS fullname \nFROM addr_streets LEFT OUTER JOIN addr_districts ON addr_districts.districtid = addr_streets.districtid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_districts.name, addr_streets.name'}, check_option=None)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_view('addr_streetnames', {'postgresql': 'SELECT addr_streets.streetid AS streetid, addr_districts.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_districts.name AS district, addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, NULL, NULL, NULL, NULL, NULL) AS fullname \nFROM addr_streets LEFT OUTER JOIN addr_districts ON addr_districts.districtid = addr_streets.districtid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_districts.name, addr_streets.name', 'mssql': 'SELECT addr_streets.streetid AS streetid, addr_districts.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_districts.name AS district, addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, NULL, NULL, NULL, NULL, NULL) AS fullname \nFROM addr_streets LEFT OUTER JOIN addr_districts ON addr_districts.districtid = addr_streets.districtid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_districts.name, addr_streets.name', 'mysql': 'SELECT addr_streets.streetid AS streetid, addr_districts.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_districts.name AS district, addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, NULL, NULL, NULL, NULL, NULL) AS fullname \nFROM addr_streets LEFT OUTER JOIN addr_districts ON addr_districts.districtid = addr_streets.districtid INNER JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_districts.name, addr_streets.name', 'oracle': 'SELECT addr_streets.streetid AS streetid, addr_districts.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_districts.name AS district, addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, NULL, NULL, NULL, NULL, NULL) AS fullname \nFROM addr_streets LEFT OUTER JOIN addr_districts ON addr_districts.districtid = addr_streets.districtid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_districts.name, addr_streets.name'}, check_option=None)
    op.drop_view('addr_compact', {'postgresql': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_format_compact(addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building', 'mssql': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_format_compact(addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building', 'mysql': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_format_compact(addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses INNER JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid INNER JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building', 'oracle': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_format_compact(addr_streets.name, addr_houses."number", addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_streets.name, addr_houses."number", addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building'}, check_option=None)
    op.drop_view('addr_extra', {'postgresql': "SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, concat_ws(' ', concat(addr_cities.name, ','), concat(addr_districts.name, ','), addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL)) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid LEFT OUTER JOIN addr_districts ON addr_districts.districtid = addr_streets.districtid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_districts.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building", 'mssql': "SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, concat_ws(' ', concat(addr_cities.name, ','), concat(addr_districts.name, ','), addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL)) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid LEFT OUTER JOIN addr_districts ON addr_districts.districtid = addr_streets.districtid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_districts.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building", 'mysql': "SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, concat_ws(' ', concat(addr_cities.name, ','), concat(addr_districts.name, ','), addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL)) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses INNER JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid LEFT OUTER JOIN addr_districts ON addr_districts.districtid = addr_streets.districtid INNER JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_districts.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building", 'oracle': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, concat_ws(\' \', concat(addr_cities.name, \',\'), concat(addr_districts.name, \',\'), addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, addr_houses."number", addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL)) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid LEFT OUTER JOIN addr_districts ON addr_districts.districtid = addr_streets.districtid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_districts.name, addr_streets.name, addr_houses."number", addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building'}, check_option=None)
    op.drop_view('addr_full', {'postgresql': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building', 'mssql': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building', 'mysql': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses INNER JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid INNER JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_streets.name, addr_houses.number, addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building', 'oracle': 'SELECT addr_houses.houseid AS houseid, addr_houses.streetid AS streetid, addr_streets.districtid AS districtid, addr_cities.cityid AS cityid, addr_cities.name AS city, addr_format(addr_streets.name, addr_streets.prefix, addr_streets.suffix, addr_houses."number", addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building, NULL) AS address, addr_houses.entrnum AS entrnum, addr_houses.postindex AS postindex \nFROM addr_houses JOIN addr_streets ON addr_streets.streetid = addr_houses.streetid JOIN addr_cities ON addr_cities.cityid = addr_streets.cityid ORDER BY addr_cities.name, addr_streets.name, addr_houses."number", addr_houses.num_slash, addr_houses.num_suffix, addr_houses.building'}, check_option=None)
    op.drop_function('geo', npd.SQLFunction('addr_list_entr', args=[npd.SQLFunctionArgument('minentr', npf.UInt8(), 'IN')], returns=None, comment='List all houses which have at least given number of entries', reads_sql=True, writes_sql=False, is_procedure=True, label=None), '5b808c910195')
    op.drop_function('geo', npd.SQLFunction('addr_list_district', args=[npd.SQLFunctionArgument('did', npf.UInt32(), 'IN')], returns=None, comment='List all houses in a given district', reads_sql=True, writes_sql=False, is_procedure=True, label=None), '5b808c910195')
    op.drop_function('geo', npd.SQLFunction('addr_get_full', args=[npd.SQLFunctionArgument('hid', npf.UInt32(), None)], returns=sa.Unicode(length=255), comment='Get full address of a house by its ID', reads_sql=True, writes_sql=False, is_procedure=False, label=None), '5b808c910195')
    op.drop_function('geo', npd.SQLFunction('addr_format', args=[npd.SQLFunctionArgument('streetname', sa.Unicode(length=255), None), npd.SQLFunctionArgument('prefix', sa.Unicode(length=8), None), npd.SQLFunctionArgument('suffix', sa.Unicode(length=8), None), npd.SQLFunctionArgument('num', npf.UInt16(), None), npd.SQLFunctionArgument('num_slash', npf.UInt16(), None), npd.SQLFunctionArgument('num_suffix', sa.Unicode(length=32), None), npd.SQLFunctionArgument('bld', npf.UInt16(), None), npd.SQLFunctionArgument('fl', npf.UInt16(), None)], returns=sa.Unicode(length=255), comment='Format full address', reads_sql=False, writes_sql=False, is_procedure=False, label=None), '5b808c910195')
    op.drop_function('geo', npd.SQLFunction('addr_format_compact', args=[npd.SQLFunctionArgument('streetname', sa.Unicode(length=255), None), npd.SQLFunctionArgument('num', npf.UInt16(), None), npd.SQLFunctionArgument('num_slash', npf.UInt16(), None), npd.SQLFunctionArgument('num_suffix', sa.Unicode(length=32), None), npd.SQLFunctionArgument('bld', npf.UInt16(), None), npd.SQLFunctionArgument('fl', npf.UInt16(), None)], returns=sa.Unicode(length=255), comment='Format compact address', reads_sql=False, writes_sql=False, is_procedure=False, label=None), '5b808c910195')
    op.drop_function('geo', npd.SQLFunction('addr_list_street', args=[npd.SQLFunctionArgument('sid', npf.UInt32(), 'IN')], returns=None, comment='List all houses on a given street', reads_sql=True, writes_sql=False, is_procedure=True, label=None), '5b808c910195')
    op.drop_index('users_locations_i_uid', table_name='users_locations')
    op.drop_index('users_locations_i_houseid', table_name='users_locations')
    op.drop_table('users_locations')
    op.drop_index('addr_places_u_number', table_name='addr_places')
    op.drop_index('addr_places_i_houseid', table_name='addr_places')
    op.drop_table('addr_places')
    op.drop_index('addr_hgroups_houses_u_member', table_name='addr_hgroups_houses')
    op.drop_index('addr_hgroups_houses_i_houseid', table_name='addr_hgroups_houses')
    op.drop_table('addr_hgroups_houses')
    op.drop_index('addr_houses_u_house', table_name='addr_houses')
    op.drop_index('addr_houses_i_districtid', table_name='addr_houses')
    op.drop_table('addr_houses')
    op.drop_index('addr_streets_u_street', table_name='addr_streets')
    op.drop_index('addr_streets_i_name', table_name='addr_streets')
    op.drop_index('addr_streets_i_districtid', table_name='addr_streets')
    op.drop_table('addr_streets')
    op.drop_index('addr_districts_u_name', table_name='addr_districts')
    op.drop_index('addr_districts_i_cityid', table_name='addr_districts')
    op.drop_table('addr_districts')
    op.drop_index('addr_hgroups_def_u_name', table_name='addr_hgroups_def')
    op.drop_table('addr_hgroups_def')
    op.drop_index('addr_cities_u_name', table_name='addr_cities')
    op.drop_table('addr_cities')
    # ### end Alembic commands ###

