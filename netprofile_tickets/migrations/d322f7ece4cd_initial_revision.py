"""Initial revision

Revision ID: d322f7ece4cd
Revises: 
Create Date: 2017-09-25 14:27:15.990400

"""

# revision identifiers, used by Alembic.
revision = 'd322f7ece4cd'
down_revision = None
branch_labels = ('tickets',)
depends_on = '16be1c0cddd0'

from alembic import op
import sqlalchemy as sa
from sqlalchemy import FetchedValue
from netprofile.db import ddl as npd
from netprofile.db import fields as npf

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tickets_changes_fields',
    sa.Column('tcfid', npf.UInt32(), npd.Comment('Ticket change field ID'), nullable=False, default=sa.Sequence('tickets_changes_fields_tcfid_seq', start=101, increment=1)),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Ticket change field name'), nullable=False),
    sa.PrimaryKeyConstraint('tcfid', name=op.f('tickets_changes_fields_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('tickets_changes_fields', 'Ticket change fields')
    op.create_index('tickets_changes_fields_u_name', 'tickets_changes_fields', ['name'], unique=True)
    op.create_table('tickets_flags_types',
    sa.Column('tftid', npf.UInt32(), npd.Comment('Ticket flag type ID'), nullable=False, default=sa.Sequence('tickets_flags_types_tftid_seq')),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Ticket flag type name'), nullable=False),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('Ticket flag type description'), server_default=sa.text('NULL'), nullable=True),
    sa.PrimaryKeyConstraint('tftid', name=op.f('tickets_flags_types_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('tickets_flags_types', 'Ticket flag types')
    op.create_index('tickets_flags_types_u_name', 'tickets_flags_types', ['name'], unique=True)
    op.create_table('tickets_origins',
    sa.Column('toid', npf.UInt32(), npd.Comment('Ticket origin ID'), nullable=False, default=sa.Sequence('tickets_origins_toid_seq', start=101, increment=1)),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Ticket origin name'), nullable=False),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('Ticket origin description'), server_default=sa.text('NULL'), nullable=True),
    sa.PrimaryKeyConstraint('toid', name=op.f('tickets_origins_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('tickets_origins', 'Origins of tickets')
    op.create_index('tickets_origins_u_name', 'tickets_origins', ['name'], unique=True)
    op.create_table('tickets_schedulers',
    sa.Column('tschedid', npf.UInt32(), npd.Comment('Ticket scheduler ID'), nullable=False, default=sa.Sequence('tickets_schedulers_tschedid_seq')),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Ticket scheduler name'), nullable=False),
    sa.Column('sim_user', npf.UInt32(), npd.Comment('Max. simultaneous per user'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('sim_group', npf.UInt32(), npd.Comment('Max. simultaneous per group'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('ov_dur', npf.UInt32(), npd.Comment('Overridden ticket duration (in sec)'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('hour_start', npf.UInt8(), npd.Comment('Allowed starting hour'), server_default=sa.text('0'), nullable=False),
    sa.Column('hour_end', npf.UInt8(), npd.Comment('Allowed ending hour'), server_default=sa.text('23'), nullable=False),
    sa.Column('wdays', npf.UInt8(), npd.Comment('Weekdays bitmask'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('spacing', npf.UInt32(), npd.Comment('Ticket spacing (in sec)'), server_default=sa.text('3600'), nullable=False),
    sa.PrimaryKeyConstraint('tschedid', name=op.f('tickets_schedulers_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('tickets_schedulers', 'Ticket scheduling presets')
    op.create_index('tickets_schedulers_u_name', 'tickets_schedulers', ['name'], unique=True)
    op.create_table('tickets_states_types',
    sa.Column('tstid', npf.UInt32(), npd.Comment('Ticket state ID'), nullable=False, default=sa.Sequence('tickets_states_types_tstid_seq')),
    sa.Column('title', sa.Unicode(length=48), npd.Comment('Ticket state title'), nullable=False),
    sa.Column('subtitle', sa.Unicode(length=48), npd.Comment('Ticket state subtitle'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('flow', npf.UInt8(), npd.Comment('Process flow index'), server_default=sa.text('1'), nullable=False),
    sa.Column('is_start', npf.NPBoolean(), npd.Comment('Can be starting state'), server_default=npf.npbool(False), nullable=False),
    sa.Column('is_end', npf.NPBoolean(), npd.Comment('Can be ending state'), server_default=npf.npbool(False), nullable=False),
    sa.Column('allow_client', npf.NPBoolean(), npd.Comment('Can be created by clients'), server_default=npf.npbool(False), nullable=False),
    sa.Column('dur', npf.UInt32(), npd.Comment('Default ticket duration (in sec)'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('style', npf.ASCIIString(length=16), npd.Comment('Ticket state style'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('image', npf.ASCIIString(length=16), npd.Comment('Ticket state image'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('Ticket state description'), server_default=sa.text('NULL'), nullable=True),
    sa.PrimaryKeyConstraint('tstid', name=op.f('tickets_states_types_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('tickets_states_types', 'Ticket state types')
    op.create_index('tickets_states_types_i_flow', 'tickets_states_types', ['flow'], unique=False)
    op.create_index('tickets_states_types_i_is_end', 'tickets_states_types', ['is_end'], unique=False)
    op.create_index('tickets_states_types_i_is_start', 'tickets_states_types', ['is_start'], unique=False)
    op.create_index('tickets_states_types_u_tst', 'tickets_states_types', ['title', 'subtitle'], unique=True)
    op.create_table('tickets_sched_assign_groups',
    sa.Column('tschedassid', npf.UInt32(), npd.Comment('Scheduler assignment ID'), nullable=False, default=sa.Sequence('tickets_sched_assign_groups_tschedassid_seq')),
    sa.Column('gid', npf.UInt32(), npd.Comment('Group ID'), nullable=False),
    sa.Column('tschedid', npf.UInt32(), npd.Comment('Ticket scheduler ID'), nullable=False),
    sa.ForeignKeyConstraint(['gid'], ['groups.gid'], name='tickets_sched_assign_groups_fk_gid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tschedid'], ['tickets_schedulers.tschedid'], name='tickets_sched_assign_groups_fk_tschedid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tschedassid', name=op.f('tickets_sched_assign_groups_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('tickets_sched_assign_groups', 'Ticket scheduling assignments for groups')
    op.create_index('tickets_sched_assign_groups_i_tschedid', 'tickets_sched_assign_groups', ['tschedid'], unique=False)
    op.create_index('tickets_sched_assign_groups_u_gid', 'tickets_sched_assign_groups', ['gid'], unique=True)
    op.create_table('tickets_states_trans',
    sa.Column('ttrid', npf.UInt32(), npd.Comment('Ticket transition ID'), nullable=False, default=sa.Sequence('tickets_states_trans_ttrid_seq')),
    sa.Column('name', sa.Unicode(length=48), npd.Comment('Ticket transition name'), nullable=False),
    sa.Column('tstid_from', npf.UInt32(), npd.Comment('From state'), nullable=False),
    sa.Column('tstid_to', npf.UInt32(), npd.Comment('To state'), nullable=False),
    sa.Column('reassign_gid', npf.UInt32(), npd.Comment('Reassign to group ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('Ticket transition description'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['reassign_gid'], ['groups.gid'], name='tickets_states_trans_fk_reassign_gid', onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['tstid_from'], ['tickets_states_types.tstid'], name='tickets_states_trans_fk_tstid_from', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tstid_to'], ['tickets_states_types.tstid'], name='tickets_states_trans_fk_tstid_to', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ttrid', name=op.f('tickets_states_trans_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('tickets_states_trans', 'Ticket state transitions')
    op.create_index('tickets_states_trans_i_reassign_gid', 'tickets_states_trans', ['reassign_gid'], unique=False)
    op.create_index('tickets_states_trans_i_tstid_to', 'tickets_states_trans', ['tstid_to'], unique=False)
    op.create_index('tickets_states_trans_u_trans', 'tickets_states_trans', ['tstid_from', 'tstid_to'], unique=True)
    op.create_table('tickets_sched_assign_users',
    sa.Column('tschedassid', npf.UInt32(), npd.Comment('Scheduler assignment ID'), nullable=False, default=sa.Sequence('tickets_sched_assign_users_tschedassid_seq')),
    sa.Column('uid', npf.UInt32(), npd.Comment('User ID'), nullable=False),
    sa.Column('tschedid', npf.UInt32(), npd.Comment('Ticket scheduler ID'), nullable=False),
    sa.ForeignKeyConstraint(['tschedid'], ['tickets_schedulers.tschedid'], name='tickets_sched_assign_users_fk_tschedid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['uid'], ['users.uid'], name='tickets_sched_assign_users_fk_uid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tschedassid', name=op.f('tickets_sched_assign_users_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('tickets_sched_assign_users', 'Ticket scheduling assignments for users')
    op.create_index('tickets_sched_assign_users_i_tschedid', 'tickets_sched_assign_users', ['tschedid'], unique=False)
    op.create_index('tickets_sched_assign_users_u_uid', 'tickets_sched_assign_users', ['uid'], unique=True)
    op.create_table('tickets_templates',
    sa.Column('ttplid', npf.UInt32(), npd.Comment('Ticket template ID'), nullable=False, default=sa.Sequence('tickets_templates_ttplid_seq')),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Ticket template name'), nullable=False),
    sa.Column('tpl_name', sa.Unicode(length=255), npd.Comment('Template for new ticket name'), nullable=False),
    sa.Column('tpl_descr', sa.UnicodeText(), npd.Comment('Template for new ticket description'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('assign_self', npf.NPBoolean(), npd.Comment('Assign to logged in user'), server_default=npf.npbool(False), nullable=False),
    sa.Column('assign_owngrp', npf.NPBoolean(), npd.Comment("Assign to user's group"), server_default=npf.npbool(False), nullable=False),
    sa.Column('assign_uid', npf.UInt32(), npd.Comment('Assign to user ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('assign_gid', npf.UInt32(), npd.Comment('Assign to group ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('tschedid', npf.UInt32(), npd.Comment('Ticket scheduler ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('dur', npf.UInt32(), npd.Comment('Default ticket duration (in sec)'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('tstid', npf.UInt32(), npd.Comment('Initial state'), nullable=False),
    sa.Column('toid', npf.UInt32(), npd.Comment('Ticket origin ID'), nullable=False),
    sa.Column('on_create', npf.ASCIIString(length=255), npd.Comment('Callback on ticket creation'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['assign_gid'], ['groups.gid'], name='tickets_templates_fk_assign_gid', onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['assign_uid'], ['users.uid'], name='tickets_templates_fk_assign_uid', onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['toid'], ['tickets_origins.toid'], name='tickets_templates_fk_toid', onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['tschedid'], ['tickets_schedulers.tschedid'], name='tickets_templates_fk_tschedid', onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['tstid'], ['tickets_states_types.tstid'], name='tickets_templates_fk_tstid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ttplid', name=op.f('tickets_templates_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('tickets_templates', 'Templates for new tickets')
    op.create_index('tickets_templates_i_assign_gid', 'tickets_templates', ['assign_gid'], unique=False)
    op.create_index('tickets_templates_i_assign_uid', 'tickets_templates', ['assign_uid'], unique=False)
    op.create_index('tickets_templates_i_toid', 'tickets_templates', ['toid'], unique=False)
    op.create_index('tickets_templates_i_tstid', 'tickets_templates', ['tstid'], unique=False)
    op.create_index('tickets_templates_u_name', 'tickets_templates', ['name'], unique=True)
    op.create_table('tickets_def',
    sa.Column('ticketid', npf.UInt32(), npd.Comment('Ticket ID'), nullable=False, default=sa.Sequence('tickets_def_ticketid_seq')),
    sa.Column('entityid', npf.UInt32(), npd.Comment('Entity ID'), nullable=False),
    sa.Column('tstid', npf.UInt32(), npd.Comment('Ticket state ID'), nullable=False),
    sa.Column('toid', npf.UInt32(), npd.Comment('Ticket origin ID'), nullable=False),
    sa.Column('assigned_uid', npf.UInt32(), npd.Comment('Assigned to user ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('assigned_gid', npf.UInt32(), npd.Comment('Assigned to group ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('assigned_time', sa.TIMESTAMP(), npd.Comment('Assigned to date'), nullable=True),
    sa.Column('dur', npf.UInt32(), npd.Comment('Ticket duration (in sec)'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('archived', npf.NPBoolean(), npd.Comment('Is archived'), server_default=npf.npbool(False), nullable=False),
    sa.Column('show_client', npf.NPBoolean(), npd.Comment('Show ticket to client'), server_default=npf.npbool(False), nullable=False),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('Ticket name'), nullable=False),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('Ticket description'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('ctime', sa.TIMESTAMP(), npd.Comment('Creation timestamp'), server_default=FetchedValue(), nullable=True),
    sa.Column('mtime', sa.TIMESTAMP(), npd.Comment('Last modification timestamp'), server_default=npd.CurrentTimestampDefault(on_update=True), nullable=False),
    sa.Column('ttime', sa.TIMESTAMP(), npd.Comment('Last state transition timestamp'), nullable=True),
    sa.Column('cby', npf.UInt32(), npd.Comment('Created by'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('mby', npf.UInt32(), npd.Comment('Modified by'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('tby', npf.UInt32(), npd.Comment('Transition by'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['assigned_gid'], ['groups.gid'], name='tickets_def_fk_assigned_gid', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['assigned_uid'], ['users.uid'], name='tickets_def_fk_assigned_uid', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['cby'], ['users.uid'], name='tickets_def_fk_cby', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['entityid'], ['entities_def.entityid'], name='tickets_def_fk_entityid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['mby'], ['users.uid'], name='tickets_def_fk_mby', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['tby'], ['users.uid'], name='tickets_def_fk_tby', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['toid'], ['tickets_origins.toid'], name='tickets_def_fk_toid', onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['tstid'], ['tickets_states_types.tstid'], name='tickets_def_fk_tstid', onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('ticketid', name=op.f('tickets_def_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('tickets_def', 'Tickets')
    op.create_trigger('netprofile_tickets', 'tickets_def', 'before', 'insert', 'd322f7ece4cd')
    op.create_trigger('netprofile_tickets', 'tickets_def', 'before', 'update', 'd322f7ece4cd')
    op.create_trigger('netprofile_tickets', 'tickets_def', 'after', 'insert', 'd322f7ece4cd')
    op.create_trigger('netprofile_tickets', 'tickets_def', 'after', 'update', 'd322f7ece4cd')
    op.create_trigger('netprofile_tickets', 'tickets_def', 'after', 'delete', 'd322f7ece4cd')
    op.create_index('tickets_def_i_archived', 'tickets_def', ['archived'], unique=False)
    op.create_index('tickets_def_i_assigned_gid', 'tickets_def', ['assigned_gid'], unique=False)
    op.create_index('tickets_def_i_assigned_uid', 'tickets_def', ['assigned_uid'], unique=False)
    op.create_index('tickets_def_i_cby', 'tickets_def', ['cby'], unique=False)
    op.create_index('tickets_def_i_entityid', 'tickets_def', ['entityid'], unique=False)
    op.create_index('tickets_def_i_mby', 'tickets_def', ['mby'], unique=False)
    op.create_index('tickets_def_i_name', 'tickets_def', ['name'], unique=False)
    op.create_index('tickets_def_i_tby', 'tickets_def', ['tby'], unique=False)
    op.create_index('tickets_def_i_toid', 'tickets_def', ['toid'], unique=False)
    op.create_index('tickets_def_i_tstid', 'tickets_def', ['tstid'], unique=False)
    op.create_table('tickets_changes_def',
    sa.Column('tcid', npf.UInt32(), npd.Comment('Ticket change ID'), nullable=False, default=sa.Sequence('tickets_changes_def_tcid_seq')),
    sa.Column('ticketid', npf.UInt32(), npd.Comment('Ticket ID'), nullable=False),
    sa.Column('ttrid', npf.UInt32(), npd.Comment('Ticket transition ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('uid', npf.UInt32(), npd.Comment('User ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('ts', sa.TIMESTAMP(), npd.Comment('Ticket change timestamp'), server_default=npd.CurrentTimestampDefault(on_update=False), nullable=False),
    sa.Column('show_client', npf.NPBoolean(), npd.Comment('Show comment to client'), server_default=npf.npbool(False), nullable=False),
    sa.Column('from_client', npf.NPBoolean(), npd.Comment('This change is from client'), server_default=npf.npbool(False), nullable=False),
    sa.Column('comments', sa.UnicodeText(), npd.Comment('Ticket change comments'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['ticketid'], ['tickets_def.ticketid'], name='tickets_changes_def_fk_ticketid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ttrid'], ['tickets_states_trans.ttrid'], name='tickets_changes_def_fk_ttrid', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['uid'], ['users.uid'], name='tickets_changes_def_fk_uid', onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('tcid', name=op.f('tickets_changes_def_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('tickets_changes_def', 'Ticket changes')
    op.create_index('tickets_changes_def_i_show_client', 'tickets_changes_def', ['show_client'], unique=False)
    op.create_index('tickets_changes_def_i_ticketid', 'tickets_changes_def', ['ticketid'], unique=False)
    op.create_index('tickets_changes_def_i_ts', 'tickets_changes_def', ['ts'], unique=False)
    op.create_index('tickets_changes_def_i_ttrid', 'tickets_changes_def', ['ttrid'], unique=False)
    op.create_index('tickets_changes_def_i_uid', 'tickets_changes_def', ['uid'], unique=False)
    op.create_table('tickets_dependencies',
    sa.Column('ticketid_parent', npf.UInt32(), npd.Comment('Ticket which is dependent on'), nullable=False),
    sa.Column('ticketid_child', npf.UInt32(), npd.Comment('Ticket which depends on a parent'), nullable=False),
    sa.ForeignKeyConstraint(['ticketid_child'], ['tickets_def.ticketid'], name='tickets_dependencies_fk_ticketid_child', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ticketid_parent'], ['tickets_def.ticketid'], name='tickets_dependencies_fk_ticketid_parent', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ticketid_parent', 'ticketid_child', name=op.f('tickets_dependencies_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('tickets_dependencies', 'Ticket resolution dependencies')
    op.create_trigger('netprofile_tickets', 'tickets_dependencies', 'before', 'insert', 'd322f7ece4cd')
    op.create_trigger('netprofile_tickets', 'tickets_dependencies', 'before', 'update', 'd322f7ece4cd')
    op.create_index('tickets_dependencies_i_ticketid_child', 'tickets_dependencies', ['ticketid_child'], unique=False)
    op.create_table('tickets_files',
    sa.Column('tfid', npf.UInt32(), npd.Comment('Ticket-file mapping ID'), nullable=False, default=sa.Sequence('tickets_files_tfid_seq')),
    sa.Column('ticketid', npf.UInt32(), npd.Comment('Ticket ID'), nullable=False),
    sa.Column('fileid', npf.UInt32(), npd.Comment('File ID'), nullable=False),
    sa.ForeignKeyConstraint(['fileid'], ['files_def.fileid'], name='tickets_files_fk_fileid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ticketid'], ['tickets_def.ticketid'], name='tickets_files_fk_ticketid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tfid', name=op.f('tickets_files_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('tickets_files', 'File mappings to tickets')
    op.create_index('tickets_files_i_fileid', 'tickets_files', ['fileid'], unique=False)
    op.create_index('tickets_files_u_tfl', 'tickets_files', ['ticketid', 'fileid'], unique=True)
    op.create_table('tickets_flags_def',
    sa.Column('tfid', npf.UInt32(), npd.Comment('Ticket flag ID'), nullable=False, default=sa.Sequence('tickets_flags_def_tfid_seq')),
    sa.Column('ticketid', npf.UInt32(), npd.Comment('Ticket ID'), nullable=False),
    sa.Column('tftid', npf.UInt32(), npd.Comment('Ticket flag type ID'), nullable=False),
    sa.ForeignKeyConstraint(['tftid'], ['tickets_flags_types.tftid'], name='tickets_flags_types_fk_tftid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ticketid'], ['tickets_def.ticketid'], name='tickets_flags_def_fk_ticketid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tfid', name=op.f('tickets_flags_def_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('tickets_flags_def', 'Ticket flag mappings')
    op.create_trigger('netprofile_tickets', 'tickets_flags_def', 'after', 'insert', 'd322f7ece4cd')
    op.create_trigger('netprofile_tickets', 'tickets_flags_def', 'after', 'delete', 'd322f7ece4cd')
    op.create_index('tickets_flags_def_i_tftid', 'tickets_flags_def', ['tftid'], unique=False)
    op.create_index('tickets_flags_def_u_tf', 'tickets_flags_def', ['ticketid', 'tftid'], unique=True)
    op.create_table('tickets_changes_bits',
    sa.Column('tcbid', npf.UInt32(), npd.Comment('Ticket change bit ID'), nullable=False, default=sa.Sequence('tickets_changes_bits_tcbid_seq')),
    sa.Column('tcid', npf.UInt32(), npd.Comment('Ticket change ID'), nullable=False),
    sa.Column('tcfid', npf.UInt32(), npd.Comment('Ticket change field ID'), nullable=False),
    sa.Column('old', sa.Unicode(length=255), npd.Comment('Old value'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('new', sa.Unicode(length=255), npd.Comment('New value'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['tcfid'], ['tickets_changes_fields.tcfid'], name='tickets_changes_bits_fk_tcfid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tcid'], ['tickets_changes_def.tcid'], name='tickets_changes_bits_fk_tcid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tcbid', name=op.f('tickets_changes_bits_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('tickets_changes_bits', 'Ticket change bits')
    op.create_index('tickets_changes_bits_i_tcfid', 'tickets_changes_bits', ['tcfid'], unique=False)
    op.create_index('tickets_changes_bits_u_tcf', 'tickets_changes_bits', ['tcid', 'tcfid'], unique=True)
    op.create_table('tickets_changes_flagmod',
    sa.Column('tcfmodid', npf.UInt32(), npd.Comment('Ticket change flag modification ID'), nullable=False, default=sa.Sequence('tickets_changes_flagmod_tcfmodid_seq')),
    sa.Column('tcid', npf.UInt32(), npd.Comment('Ticket change ID'), nullable=False),
    sa.Column('tftid', npf.UInt32(), npd.Comment('Ticket flag type ID'), nullable=False),
    sa.Column('newstate', npf.NPBoolean(), npd.Comment('Resulting flag state'), nullable=False),
    sa.ForeignKeyConstraint(['tcid'], ['tickets_changes_def.tcid'], name='tickets_changes_flagmod_fk_tcid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tftid'], ['tickets_flags_types.tftid'], name='tickets_changes_flagmod_fk_tftid', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tcfmodid', name=op.f('tickets_changes_flagmod_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('tickets_changes_flagmod', 'Ticket change bits modifying flags')
    op.create_index('tickets_changes_flagmod_i_tftid', 'tickets_changes_flagmod', ['tftid'], unique=False)
    op.create_index('tickets_changes_flagmod_u_tcflag', 'tickets_changes_flagmod', ['tcid', 'tftid'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('tickets_changes_flagmod_u_tcflag', table_name='tickets_changes_flagmod')
    op.drop_index('tickets_changes_flagmod_i_tftid', table_name='tickets_changes_flagmod')
    op.drop_table('tickets_changes_flagmod')
    op.drop_index('tickets_changes_bits_u_tcf', table_name='tickets_changes_bits')
    op.drop_index('tickets_changes_bits_i_tcfid', table_name='tickets_changes_bits')
    op.drop_table('tickets_changes_bits')
    op.drop_index('tickets_flags_def_u_tf', table_name='tickets_flags_def')
    op.drop_index('tickets_flags_def_i_tftid', table_name='tickets_flags_def')
    op.drop_table('tickets_flags_def')
    op.drop_index('tickets_files_u_tfl', table_name='tickets_files')
    op.drop_index('tickets_files_i_fileid', table_name='tickets_files')
    op.drop_table('tickets_files')
    op.drop_index('tickets_dependencies_i_ticketid_child', table_name='tickets_dependencies')
    op.drop_table('tickets_dependencies')
    op.drop_index('tickets_changes_def_i_uid', table_name='tickets_changes_def')
    op.drop_index('tickets_changes_def_i_ttrid', table_name='tickets_changes_def')
    op.drop_index('tickets_changes_def_i_ts', table_name='tickets_changes_def')
    op.drop_index('tickets_changes_def_i_ticketid', table_name='tickets_changes_def')
    op.drop_index('tickets_changes_def_i_show_client', table_name='tickets_changes_def')
    op.drop_table('tickets_changes_def')
    op.drop_index('tickets_def_i_tstid', table_name='tickets_def')
    op.drop_index('tickets_def_i_toid', table_name='tickets_def')
    op.drop_index('tickets_def_i_tby', table_name='tickets_def')
    op.drop_index('tickets_def_i_name', table_name='tickets_def')
    op.drop_index('tickets_def_i_mby', table_name='tickets_def')
    op.drop_index('tickets_def_i_entityid', table_name='tickets_def')
    op.drop_index('tickets_def_i_cby', table_name='tickets_def')
    op.drop_index('tickets_def_i_assigned_uid', table_name='tickets_def')
    op.drop_index('tickets_def_i_assigned_gid', table_name='tickets_def')
    op.drop_index('tickets_def_i_archived', table_name='tickets_def')
    op.drop_table('tickets_def')
    op.drop_index('tickets_templates_u_name', table_name='tickets_templates')
    op.drop_index('tickets_templates_i_tstid', table_name='tickets_templates')
    op.drop_index('tickets_templates_i_toid', table_name='tickets_templates')
    op.drop_index('tickets_templates_i_assign_uid', table_name='tickets_templates')
    op.drop_index('tickets_templates_i_assign_gid', table_name='tickets_templates')
    op.drop_table('tickets_templates')
    op.drop_index('tickets_sched_assign_users_u_uid', table_name='tickets_sched_assign_users')
    op.drop_index('tickets_sched_assign_users_i_tschedid', table_name='tickets_sched_assign_users')
    op.drop_table('tickets_sched_assign_users')
    op.drop_index('tickets_states_trans_u_trans', table_name='tickets_states_trans')
    op.drop_index('tickets_states_trans_i_tstid_to', table_name='tickets_states_trans')
    op.drop_index('tickets_states_trans_i_reassign_gid', table_name='tickets_states_trans')
    op.drop_table('tickets_states_trans')
    op.drop_index('tickets_sched_assign_groups_u_gid', table_name='tickets_sched_assign_groups')
    op.drop_index('tickets_sched_assign_groups_i_tschedid', table_name='tickets_sched_assign_groups')
    op.drop_table('tickets_sched_assign_groups')
    op.drop_index('tickets_states_types_u_tst', table_name='tickets_states_types')
    op.drop_index('tickets_states_types_i_is_start', table_name='tickets_states_types')
    op.drop_index('tickets_states_types_i_is_end', table_name='tickets_states_types')
    op.drop_index('tickets_states_types_i_flow', table_name='tickets_states_types')
    op.drop_table('tickets_states_types')
    op.drop_index('tickets_schedulers_u_name', table_name='tickets_schedulers')
    op.drop_table('tickets_schedulers')
    op.drop_index('tickets_origins_u_name', table_name='tickets_origins')
    op.drop_table('tickets_origins')
    op.drop_index('tickets_flags_types_u_name', table_name='tickets_flags_types')
    op.drop_table('tickets_flags_types')
    op.drop_index('tickets_changes_fields_u_name', table_name='tickets_changes_fields')
    op.drop_table('tickets_changes_fields')
    # ### end Alembic commands ###

