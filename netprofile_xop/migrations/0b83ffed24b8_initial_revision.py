"""Initial revision

Revision ID: 0b83ffed24b8
Revises: 
Create Date: 2017-09-25 16:30:23.811315

"""

# revision identifiers, used by Alembic.
revision = '0b83ffed24b8'
down_revision = None
branch_labels = ('xop',)
depends_on = '2e190ad964b4'

from alembic import op
import sqlalchemy as sa
from sqlalchemy import FetchedValue
from netprofile.db import ddl as npd
from netprofile.db import fields as npf

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('xop_providers',
    sa.Column('xoppid', npf.UInt32(), npd.Comment('External operation provider ID'), nullable=False, default=sa.Sequence('xop_providers_xoppid_seq')),
    sa.Column('uri', npf.ASCIIString(length=64), npd.Comment('URI used in XOP interface'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('name', sa.Unicode(length=255), npd.Comment('External operation provider name'), nullable=False),
    sa.Column('sname', sa.Unicode(length=32), npd.Comment('External operation provider short name'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('enabled', npf.NPBoolean(), npd.Comment('Is provider enabled?'), server_default=npf.npbool(False), nullable=False),
    sa.Column('accesslist', npf.ASCIIString(length=255), npd.Comment('Allowed access rules'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('gwclass', npf.ASCIIString(length=64), npd.Comment('Provider gateway class name'), nullable=False),
    sa.Column('siotypeid', npf.UInt32(), npd.Comment('Stash I/O type generated in transaction'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('mindiff', npf.Money(precision=20, scale=8), npd.Comment('Minimum operation result'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('maxdiff', npf.Money(precision=20, scale=8), npd.Comment('Maxmum operation result'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('authmethod', npf.DeclEnumType(name='ExternalOperationProviderAuthMethod', values=['http', 'req-md5', 'req-sha1']), npd.Comment('Authentication method'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('authopts', npf.JSONData(), npd.Comment('Authentication options'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('authuser', sa.Unicode(length=255), npd.Comment('Authentication user'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('authpass', sa.Unicode(length=255), npd.Comment('Authentication password'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('descr', sa.UnicodeText(), npd.Comment('External operation provider description'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['siotypeid'], ['stashes_io_types.siotypeid'], name='xop_providers_fk_soitypeid', onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('xoppid', name=op.f('xop_providers_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('xop_providers', 'External operation providers')
    op.create_index('xop_providers_i_siotypeid', 'xop_providers', ['siotypeid'], unique=False)
    op.create_index('xop_providers_u_name', 'xop_providers', ['name'], unique=True)
    op.create_index('xop_providers_u_sname', 'xop_providers', ['sname'], unique=True)
    op.create_index('xop_providers_u_uri', 'xop_providers', ['uri'], unique=True)
    op.create_table('xop_def',
    sa.Column('xopid', npf.UInt32(), npd.Comment('External operation ID'), nullable=False, default=sa.Sequence('xop_def_xopid_seq')),
    sa.Column('extid', npf.ASCIIString(length=255), npd.Comment('Remote provider operation ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('eacct', sa.Unicode(length=255), npd.Comment('External account name'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('xoppid', npf.UInt32(), npd.Comment('External operation provider ID'), nullable=False),
    sa.Column('currid', npf.UInt32(), npd.Comment('Currency ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('ts', sa.TIMESTAMP(), npd.Comment('Timestamp of operation'), server_default=npd.CurrentTimestampDefault(on_update=True), nullable=False),
    sa.Column('entityid', npf.UInt32(), npd.Comment('Entity ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('stashid', npf.UInt32(), npd.Comment('Affected stash ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('sioid', npf.UInt32(), npd.Comment('Related stash operation ID'), server_default=sa.text('NULL'), nullable=True),
    sa.Column('diff', npf.Money(precision=20, scale=8), npd.Comment('Stash amount changes'), server_default=sa.text('0.0'), nullable=False),
    sa.Column('state', npf.DeclEnumType(name='ExternalOperationState', values=['NEW', 'CHK', 'PND', 'CNF', 'CLR', 'CNC']), npd.Comment('Operation state'), server_default=sa.text("'NEW'"), nullable=False),
    sa.Column('data', npf.JSONData(), npd.Comment('Extra data for use by extensions'), server_default=sa.text('NULL'), nullable=True),
    sa.ForeignKeyConstraint(['currid'], ['currencies_def.currid'], name='xop_def_fk_currid', onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['entityid'], ['entities_def.entityid'], name='xop_def_fk_entityid', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['sioid'], ['stashes_io_def.sioid'], name='xop_def_fk_sioid', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['stashid'], ['stashes_def.stashid'], name='xop_def_fk_stashid', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['xoppid'], ['xop_providers.xoppid'], name='xop_def_fk_xoppid', onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('xopid', name=op.f('xop_def_pk')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.set_table_comment('xop_def', 'External operations')
    op.create_trigger('netprofile_xop', 'xop_def', 'before', 'insert', '0b83ffed24b8')
    op.create_trigger('netprofile_xop', 'xop_def', 'before', 'update', '0b83ffed24b8')
    op.create_index('xop_def_i_entityid', 'xop_def', ['entityid'], unique=False)
    op.create_index('xop_def_i_extid', 'xop_def', ['extid'], unique=False)
    op.create_index('xop_def_i_stashid', 'xop_def', ['stashid'], unique=False)
    op.create_index('xop_def_i_ts', 'xop_def', ['ts'], unique=False)
    op.create_index('xop_def_i_xoppid', 'xop_def', ['xoppid'], unique=False)
    op.create_index('xop_def_u_sioid', 'xop_def', ['sioid'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('xop_def_u_sioid', table_name='xop_def')
    op.drop_index('xop_def_i_xoppid', table_name='xop_def')
    op.drop_index('xop_def_i_ts', table_name='xop_def')
    op.drop_index('xop_def_i_stashid', table_name='xop_def')
    op.drop_index('xop_def_i_extid', table_name='xop_def')
    op.drop_index('xop_def_i_entityid', table_name='xop_def')
    op.drop_table('xop_def')
    op.drop_index('xop_providers_u_uri', table_name='xop_providers')
    op.drop_index('xop_providers_u_sname', table_name='xop_providers')
    op.drop_index('xop_providers_u_name', table_name='xop_providers')
    op.drop_index('xop_providers_i_siotypeid', table_name='xop_providers')
    op.drop_table('xop_providers')
    # ### end Alembic commands ###

